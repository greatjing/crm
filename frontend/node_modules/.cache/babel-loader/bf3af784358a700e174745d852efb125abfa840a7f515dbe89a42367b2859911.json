{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"strategy-test\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"test-result\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[4] || (_cache[4] = _createElementVNode(\"div\", {\n    class: \"header\"\n  }, [_createElementVNode(\"h2\", null, \"策略测试\")], -1 /* HOISTED */)), _createVNode(_component_el_form, {\n    model: $data.form,\n    \"label-width\": \"120px\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_form_item, {\n      label: \"测试数据\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: $data.form.testData,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.form.testData = $event),\n        type: \"textarea\",\n        rows: 5,\n        placeholder: \"请输入测试数据（JSON格式）\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, null, {\n      default: _withCtx(() => [_createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: $options.runTest\n      }, {\n        default: _withCtx(() => _cache[1] || (_cache[1] = [_createTextVNode(\"运行测试\")])),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_el_button, {\n        onClick: $options.back\n      }, {\n        default: _withCtx(() => _cache[2] || (_cache[2] = [_createTextVNode(\"返回\")])),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"model\"]), $data.testResult ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_cache[3] || (_cache[3] = _createElementVNode(\"h3\", null, \"测试结果\", -1 /* HOISTED */)), _createVNode(_component_el_card, null, {\n    default: _withCtx(() => [_createElementVNode(\"pre\", null, _toDisplayString($data.testResult), 1 /* TEXT */)]),\n    _: 1 /* STABLE */\n  })])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_createVNode","_component_el_form","model","$data","form","default","_withCtx","_component_el_form_item","label","_component_el_input","modelValue","testData","_cache","$event","type","rows","placeholder","_","_component_el_button","onClick","$options","runTest","_createTextVNode","back","testResult","_hoisted_2","_component_el_card","_toDisplayString","_createCommentVNode"],"sources":["/Users/guojingjing/2024-ai-code/crm/frontend/src/views/strategy/StrategyTest.vue"],"sourcesContent":["<template>\n  <div class=\"strategy-test\">\n    <div class=\"header\">\n      <h2>策略测试</h2>\n    </div>\n    \n    <el-form :model=\"form\" label-width=\"120px\">\n      <el-form-item label=\"测试数据\">\n        <el-input v-model=\"form.testData\" type=\"textarea\" :rows=\"5\" placeholder=\"请输入测试数据（JSON格式）\" />\n      </el-form-item>\n      \n      <el-form-item>\n        <el-button type=\"primary\" @click=\"runTest\">运行测试</el-button>\n        <el-button @click=\"back\">返回</el-button>\n      </el-form-item>\n    </el-form>\n    \n    <div v-if=\"testResult\" class=\"test-result\">\n      <h3>测试结果</h3>\n      <el-card>\n        <pre>{{ testResult }}</pre>\n      </el-card>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'StrategyTest',\n  data() {\n    return {\n      form: {\n        testData: ''\n      },\n      testResult: null\n    }\n  },\n  methods: {\n    runTest() {\n      // TODO: 实现测试逻辑\n      this.testResult = {\n        status: 'success',\n        message: '测试执行成功',\n        data: {\n          // 测试结果数据\n        }\n      }\n    },\n    back() {\n      this.$router.push('/strategy')\n    }\n  }\n}\n</script>\n\n<style scoped>\n.strategy-test {\n  padding: 20px;\n}\n.header {\n  margin-bottom: 20px;\n}\n.test-result {\n  margin-top: 20px;\n}\npre {\n  white-space: pre-wrap;\n  word-wrap: break-word;\n}\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAe;;EAD5BC,GAAA;EAiB2BD,KAAK,EAAC;;;;;;;;uBAhB/BE,mBAAA,CAsBM,OAtBNC,UAsBM,G,0BArBJC,mBAAA,CAEM;IAFDJ,KAAK,EAAC;EAAQ,IACjBI,mBAAA,CAAa,YAAT,MAAI,E,sBAGVC,YAAA,CASUC,kBAAA;IATAC,KAAK,EAAEC,KAAA,CAAAC,IAAI;IAAE,aAAW,EAAC;;IANvCC,OAAA,EAAAC,QAAA,CAOM,MAEe,CAFfN,YAAA,CAEeO,uBAAA;MAFDC,KAAK,EAAC;IAAM;MAPhCH,OAAA,EAAAC,QAAA,CAQQ,MAA4F,CAA5FN,YAAA,CAA4FS,mBAAA;QARpGC,UAAA,EAQ2BP,KAAA,CAAAC,IAAI,CAACO,QAAQ;QARxC,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAQ2BV,KAAA,CAAAC,IAAI,CAACO,QAAQ,GAAAE,MAAA;QAAEC,IAAI,EAAC,UAAU;QAAEC,IAAI,EAAE,CAAC;QAAEC,WAAW,EAAC;;MARhFC,CAAA;QAWMjB,YAAA,CAGeO,uBAAA;MAdrBF,OAAA,EAAAC,QAAA,CAYQ,MAA2D,CAA3DN,YAAA,CAA2DkB,oBAAA;QAAhDJ,IAAI,EAAC,SAAS;QAAEK,OAAK,EAAEC,QAAA,CAAAC;;QAZ1ChB,OAAA,EAAAC,QAAA,CAYmD,MAAIM,MAAA,QAAAA,MAAA,OAZvDU,gBAAA,CAYmD,MAAI,E;QAZvDL,CAAA;sCAaQjB,YAAA,CAAuCkB,oBAAA;QAA3BC,OAAK,EAAEC,QAAA,CAAAG;MAAI;QAb/BlB,OAAA,EAAAC,QAAA,CAaiC,MAAEM,MAAA,QAAAA,MAAA,OAbnCU,gBAAA,CAaiC,IAAE,E;QAbnCL,CAAA;;MAAAA,CAAA;;IAAAA,CAAA;gCAiBed,KAAA,CAAAqB,UAAU,I,cAArB3B,mBAAA,CAKM,OALN4B,UAKM,G,0BAJJ1B,mBAAA,CAAa,YAAT,MAAI,sBACRC,YAAA,CAEU0B,kBAAA;IArBhBrB,OAAA,EAAAC,QAAA,CAoBQ,MAA2B,CAA3BP,mBAAA,CAA2B,aAAA4B,gBAAA,CAAnBxB,KAAA,CAAAqB,UAAU,iB;IApB1BP,CAAA;UAAAW,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}