{"ast":null,"code":"import _objectSpread from \"/Users/guojingjing/2024-ai-code/crm/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport * as monaco from 'monaco-editor';\nimport { onMounted, onBeforeUnmount, watch, ref } from 'vue';\nexport default {\n  __name: 'MonacoEditor',\n  props: {\n    modelValue: {\n      type: String,\n      \"default\": ''\n    },\n    language: {\n      type: String,\n      \"default\": 'javascript'\n    },\n    options: {\n      type: Object,\n      \"default\": function _default() {\n        return {};\n      }\n    },\n    readOnly: {\n      type: Boolean,\n      \"default\": false\n    }\n  },\n  emits: ['update:modelValue', 'change', 'save'],\n  setup: function setup(__props, _ref) {\n    var __expose = _ref.expose,\n      __emit = _ref.emit;\n    __expose();\n    var props = __props;\n    var emit = __emit;\n\n    // Python 代码片段\n    var pythonSnippets = [{\n      label: 'def',\n      insertText: 'def ${1:function_name}(${2:parameters}):\\n\\t${3:pass}',\n      documentation: '创建一个函数'\n    }, {\n      label: 'class',\n      insertText: 'class ${1:ClassName}:\\n\\tdef __init__(self):\\n\\t\\t${2:pass}',\n      documentation: '创建一个类'\n    }, {\n      label: 'if',\n      insertText: 'if ${1:condition}:\\n\\t${2:pass}',\n      documentation: 'if 条件语句'\n    }, {\n      label: 'for',\n      insertText: 'for ${1:item} in ${2:items}:\\n\\t${3:pass}',\n      documentation: 'for 循环'\n    }, {\n      label: 'try',\n      insertText: 'try:\\n\\t${1:pass}\\nexcept ${2:Exception} as e:\\n\\t${3:pass}',\n      documentation: '异常处理'\n    }];\n\n    // SQL 代码片段\n    var sqlSnippets = [{\n      label: 'SELECT',\n      insertText: 'SELECT ${1:*}\\nFROM ${2:table_name}\\nWHERE ${3:condition}',\n      documentation: '查询数据'\n    }, {\n      label: 'INSERT',\n      insertText: 'INSERT INTO ${1:table_name} (${2:columns})\\nVALUES (${3:values})',\n      documentation: '插入数据'\n    }, {\n      label: 'UPDATE',\n      insertText: 'UPDATE ${1:table_name}\\nSET ${2:column} = ${3:value}\\nWHERE ${4:condition}',\n      documentation: '更新数据'\n    }, {\n      label: 'DELETE',\n      insertText: 'DELETE FROM ${1:table_name}\\nWHERE ${2:condition}',\n      documentation: '删除数据'\n    }, {\n      label: 'JOIN',\n      insertText: 'SELECT ${1:*}\\nFROM ${2:table1}\\nJOIN ${3:table2} ON ${4:condition}',\n      documentation: '表连接'\n    }];\n\n    // 配置编辑器主题\n    monaco.editor.defineTheme('customTheme', {\n      base: 'vs-dark',\n      inherit: true,\n      rules: [{\n        token: 'keyword',\n        foreground: '569CD6',\n        fontStyle: 'bold'\n      }, {\n        token: 'string',\n        foreground: 'CE9178'\n      }, {\n        token: 'number',\n        foreground: 'B5CEA8'\n      }, {\n        token: 'comment',\n        foreground: '6A9955',\n        fontStyle: 'italic'\n      }],\n      colors: {\n        'editor.background': '#1E1E1E',\n        'editor.foreground': '#D4D4D4',\n        'editor.lineHighlightBackground': '#2F3337',\n        'editorCursor.foreground': '#FFFFFF',\n        'editor.selectionBackground': '#264F78'\n      }\n    });\n    var editor = null;\n    var editorContainer = ref(null);\n    var defaultOptions = {\n      theme: 'customTheme',\n      fontSize: 14,\n      minimap: {\n        enabled: false\n      },\n      scrollBeyondLastLine: false,\n      automaticLayout: true,\n      tabSize: 4,\n      wordWrap: 'on',\n      wrappingIndent: 'indent',\n      autoIndent: 'advanced',\n      formatOnPaste: true,\n      formatOnType: true,\n      suggestOnTriggerCharacters: true,\n      snippetSuggestions: 'top',\n      lineNumbers: 'on',\n      renderWhitespace: 'selection',\n      matchBrackets: 'always',\n      autoClosingBrackets: 'always',\n      autoClosingQuotes: 'always',\n      folding: true,\n      showFoldingControls: 'always'\n    };\n    var registerLanguageProviders = function registerLanguageProviders() {\n      if (props.language === 'python') {\n        monaco.languages.registerCompletionItemProvider('python', {\n          provideCompletionItems: function provideCompletionItems() {\n            var suggestions = pythonSnippets.map(function (snippet) {\n              return {\n                label: snippet.label,\n                kind: monaco.languages.CompletionItemKind.Snippet,\n                insertText: snippet.insertText,\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n                documentation: snippet.documentation\n              };\n            });\n            return {\n              suggestions: suggestions\n            };\n          }\n        });\n      } else if (props.language === 'sql') {\n        monaco.languages.registerCompletionItemProvider('sql', {\n          provideCompletionItems: function provideCompletionItems() {\n            var suggestions = sqlSnippets.map(function (snippet) {\n              return {\n                label: snippet.label,\n                kind: monaco.languages.CompletionItemKind.Snippet,\n                insertText: snippet.insertText,\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n                documentation: snippet.documentation\n              };\n            });\n            return {\n              suggestions: suggestions\n            };\n          }\n        });\n      }\n    };\n    var initMonaco = function initMonaco() {\n      var options = _objectSpread(_objectSpread(_objectSpread({}, defaultOptions), props.options), {}, {\n        value: props.modelValue,\n        language: props.language,\n        readOnly: props.readOnly\n      });\n      editor = monaco.editor.create(editorContainer.value, options);\n      registerLanguageProviders();\n      editor.onDidChangeModelContent(function () {\n        var value = editor.getValue();\n        emit('update:modelValue', value);\n        emit('change', value);\n      });\n      editor.addCommand(monaco.KeyMod.CtrlCmd | monaco.KeyCode.KeyS, function () {\n        emit('save', editor.getValue());\n      });\n\n      // 添加格式化命令\n      editor.addCommand(monaco.KeyMod.Alt | monaco.KeyMod.Shift | monaco.KeyCode.KeyF, function () {\n        editor.getAction('editor.action.formatDocument').run();\n      });\n    };\n    onMounted(function () {\n      initMonaco();\n    });\n    onBeforeUnmount(function () {\n      if (editor) {\n        editor.dispose();\n      }\n    });\n    watch(function () {\n      return props.modelValue;\n    }, function (newValue) {\n      if (editor && newValue !== editor.getValue()) {\n        editor.setValue(newValue);\n      }\n    });\n    watch(function () {\n      return props.language;\n    }, function (newValue) {\n      if (editor) {\n        monaco.editor.setModelLanguage(editor.getModel(), newValue);\n        registerLanguageProviders();\n      }\n    });\n    watch(function () {\n      return props.readOnly;\n    }, function (newValue) {\n      if (editor) {\n        editor.updateOptions({\n          readOnly: newValue\n        });\n      }\n    });\n    var __returned__ = {\n      props: props,\n      emit: emit,\n      pythonSnippets: pythonSnippets,\n      sqlSnippets: sqlSnippets,\n      get editor() {\n        return editor;\n      },\n      set editor(v) {\n        editor = v;\n      },\n      editorContainer: editorContainer,\n      defaultOptions: defaultOptions,\n      registerLanguageProviders: registerLanguageProviders,\n      initMonaco: initMonaco,\n      get monaco() {\n        return monaco;\n      },\n      onMounted: onMounted,\n      onBeforeUnmount: onBeforeUnmount,\n      watch: watch,\n      ref: ref\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["monaco","onMounted","onBeforeUnmount","watch","ref","props","__props","emit","__emit","pythonSnippets","label","insertText","documentation","sqlSnippets","editor","defineTheme","base","inherit","rules","token","foreground","fontStyle","colors","editorContainer","defaultOptions","theme","fontSize","minimap","enabled","scrollBeyondLastLine","automaticLayout","tabSize","wordWrap","wrappingIndent","autoIndent","formatOnPaste","formatOnType","suggestOnTriggerCharacters","snippetSuggestions","lineNumbers","renderWhitespace","matchBrackets","autoClosingBrackets","autoClosingQuotes","folding","showFoldingControls","registerLanguageProviders","language","languages","registerCompletionItemProvider","provideCompletionItems","suggestions","map","snippet","kind","CompletionItemKind","Snippet","insertTextRules","CompletionItemInsertTextRule","InsertAsSnippet","initMonaco","options","_objectSpread","value","modelValue","readOnly","create","onDidChangeModelContent","getValue","addCommand","KeyMod","CtrlCmd","KeyCode","KeyS","Alt","Shift","KeyF","getAction","run","dispose","newValue","setValue","setModelLanguage","getModel","updateOptions"],"sources":["/Users/guojingjing/2024-ai-code/crm/frontend/src/components/MonacoEditor.vue"],"sourcesContent":["<template>\n  <div ref=\"editorContainer\" class=\"monaco-editor-container\"></div>\n</template>\n\n<script setup>\nimport * as monaco from 'monaco-editor'\nimport { onMounted, onBeforeUnmount, watch, ref } from 'vue'\n\nconst props = defineProps({\n  modelValue: {\n    type: String,\n    default: ''\n  },\n  language: {\n    type: String,\n    default: 'javascript'\n  },\n  options: {\n    type: Object,\n    default: () => ({})\n  },\n  readOnly: {\n    type: Boolean,\n    default: false\n  }\n})\n\nconst emit = defineEmits(['update:modelValue', 'change', 'save'])\n\n// Python 代码片段\nconst pythonSnippets = [\n  {\n    label: 'def',\n    insertText: 'def ${1:function_name}(${2:parameters}):\\n\\t${3:pass}',\n    documentation: '创建一个函数'\n  },\n  {\n    label: 'class',\n    insertText: 'class ${1:ClassName}:\\n\\tdef __init__(self):\\n\\t\\t${2:pass}',\n    documentation: '创建一个类'\n  },\n  {\n    label: 'if',\n    insertText: 'if ${1:condition}:\\n\\t${2:pass}',\n    documentation: 'if 条件语句'\n  },\n  {\n    label: 'for',\n    insertText: 'for ${1:item} in ${2:items}:\\n\\t${3:pass}',\n    documentation: 'for 循环'\n  },\n  {\n    label: 'try',\n    insertText: 'try:\\n\\t${1:pass}\\nexcept ${2:Exception} as e:\\n\\t${3:pass}',\n    documentation: '异常处理'\n  }\n]\n\n// SQL 代码片段\nconst sqlSnippets = [\n  {\n    label: 'SELECT',\n    insertText: 'SELECT ${1:*}\\nFROM ${2:table_name}\\nWHERE ${3:condition}',\n    documentation: '查询数据'\n  },\n  {\n    label: 'INSERT',\n    insertText: 'INSERT INTO ${1:table_name} (${2:columns})\\nVALUES (${3:values})',\n    documentation: '插入数据'\n  },\n  {\n    label: 'UPDATE',\n    insertText: 'UPDATE ${1:table_name}\\nSET ${2:column} = ${3:value}\\nWHERE ${4:condition}',\n    documentation: '更新数据'\n  },\n  {\n    label: 'DELETE',\n    insertText: 'DELETE FROM ${1:table_name}\\nWHERE ${2:condition}',\n    documentation: '删除数据'\n  },\n  {\n    label: 'JOIN',\n    insertText: 'SELECT ${1:*}\\nFROM ${2:table1}\\nJOIN ${3:table2} ON ${4:condition}',\n    documentation: '表连接'\n  }\n]\n\n// 配置编辑器主题\nmonaco.editor.defineTheme('customTheme', {\n  base: 'vs-dark',\n  inherit: true,\n  rules: [\n    { token: 'keyword', foreground: '569CD6', fontStyle: 'bold' },\n    { token: 'string', foreground: 'CE9178' },\n    { token: 'number', foreground: 'B5CEA8' },\n    { token: 'comment', foreground: '6A9955', fontStyle: 'italic' }\n  ],\n  colors: {\n    'editor.background': '#1E1E1E',\n    'editor.foreground': '#D4D4D4',\n    'editor.lineHighlightBackground': '#2F3337',\n    'editorCursor.foreground': '#FFFFFF',\n    'editor.selectionBackground': '#264F78'\n  }\n})\n\nlet editor = null\nconst editorContainer = ref(null)\n\nconst defaultOptions = {\n  theme: 'customTheme',\n  fontSize: 14,\n  minimap: { enabled: false },\n  scrollBeyondLastLine: false,\n  automaticLayout: true,\n  tabSize: 4,\n  wordWrap: 'on',\n  wrappingIndent: 'indent',\n  autoIndent: 'advanced',\n  formatOnPaste: true,\n  formatOnType: true,\n  suggestOnTriggerCharacters: true,\n  snippetSuggestions: 'top',\n  lineNumbers: 'on',\n  renderWhitespace: 'selection',\n  matchBrackets: 'always',\n  autoClosingBrackets: 'always',\n  autoClosingQuotes: 'always',\n  folding: true,\n  showFoldingControls: 'always'\n}\n\nconst registerLanguageProviders = () => {\n  if (props.language === 'python') {\n    monaco.languages.registerCompletionItemProvider('python', {\n      provideCompletionItems: () => {\n        const suggestions = pythonSnippets.map(snippet => ({\n          label: snippet.label,\n          kind: monaco.languages.CompletionItemKind.Snippet,\n          insertText: snippet.insertText,\n          insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n          documentation: snippet.documentation\n        }))\n        return { suggestions }\n      }\n    })\n  } else if (props.language === 'sql') {\n    monaco.languages.registerCompletionItemProvider('sql', {\n      provideCompletionItems: () => {\n        const suggestions = sqlSnippets.map(snippet => ({\n          label: snippet.label,\n          kind: monaco.languages.CompletionItemKind.Snippet,\n          insertText: snippet.insertText,\n          insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n          documentation: snippet.documentation\n        }))\n        return { suggestions }\n      }\n    })\n  }\n}\n\nconst initMonaco = () => {\n  const options = {\n    ...defaultOptions,\n    ...props.options,\n    value: props.modelValue,\n    language: props.language,\n    readOnly: props.readOnly\n  }\n\n  editor = monaco.editor.create(editorContainer.value, options)\n  registerLanguageProviders()\n\n  editor.onDidChangeModelContent(() => {\n    const value = editor.getValue()\n    emit('update:modelValue', value)\n    emit('change', value)\n  })\n\n  editor.addCommand(monaco.KeyMod.CtrlCmd | monaco.KeyCode.KeyS, () => {\n    emit('save', editor.getValue())\n  })\n\n  // 添加格式化命令\n  editor.addCommand(monaco.KeyMod.Alt | monaco.KeyMod.Shift | monaco.KeyCode.KeyF, () => {\n    editor.getAction('editor.action.formatDocument').run()\n  })\n}\n\nonMounted(() => {\n  initMonaco()\n})\n\nonBeforeUnmount(() => {\n  if (editor) {\n    editor.dispose()\n  }\n})\n\nwatch(() => props.modelValue, (newValue) => {\n  if (editor && newValue !== editor.getValue()) {\n    editor.setValue(newValue)\n  }\n})\n\nwatch(() => props.language, (newValue) => {\n  if (editor) {\n    monaco.editor.setModelLanguage(editor.getModel(), newValue)\n    registerLanguageProviders()\n  }\n})\n\nwatch(() => props.readOnly, (newValue) => {\n  if (editor) {\n    editor.updateOptions({ readOnly: newValue })\n  }\n})\n</script>\n\n<style scoped>\n.monaco-editor-container {\n  width: 100%;\n  height: 100%;\n  border-radius: 4px;\n  overflow: hidden;\n}\n</style> "],"mappings":";;;AAKA,OAAO,KAAKA,MAAM,MAAM,eAAc;AACtC,SAASC,SAAS,EAAEC,eAAe,EAAEC,KAAK,EAAEC,GAAG,QAAQ,KAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAE3D,IAAMC,KAAK,GAAGC,OAAA;IAmBd,IAAMC,IAAI,GAAGC,MAAA;;IAEb;IACA,IAAMC,cAAc,GAAG,CACrB;MACEC,KAAK,EAAE,KAAK;MACZC,UAAU,EAAE,uDAAuD;MACnEC,aAAa,EAAE;IACjB,CAAC,EACD;MACEF,KAAK,EAAE,OAAO;MACdC,UAAU,EAAE,6DAA6D;MACzEC,aAAa,EAAE;IACjB,CAAC,EACD;MACEF,KAAK,EAAE,IAAI;MACXC,UAAU,EAAE,iCAAiC;MAC7CC,aAAa,EAAE;IACjB,CAAC,EACD;MACEF,KAAK,EAAE,KAAK;MACZC,UAAU,EAAE,2CAA2C;MACvDC,aAAa,EAAE;IACjB,CAAC,EACD;MACEF,KAAK,EAAE,KAAK;MACZC,UAAU,EAAE,6DAA6D;MACzEC,aAAa,EAAE;IACjB,EACF;;IAEA;IACA,IAAMC,WAAW,GAAG,CAClB;MACEH,KAAK,EAAE,QAAQ;MACfC,UAAU,EAAE,2DAA2D;MACvEC,aAAa,EAAE;IACjB,CAAC,EACD;MACEF,KAAK,EAAE,QAAQ;MACfC,UAAU,EAAE,kEAAkE;MAC9EC,aAAa,EAAE;IACjB,CAAC,EACD;MACEF,KAAK,EAAE,QAAQ;MACfC,UAAU,EAAE,4EAA4E;MACxFC,aAAa,EAAE;IACjB,CAAC,EACD;MACEF,KAAK,EAAE,QAAQ;MACfC,UAAU,EAAE,mDAAmD;MAC/DC,aAAa,EAAE;IACjB,CAAC,EACD;MACEF,KAAK,EAAE,MAAM;MACbC,UAAU,EAAE,qEAAqE;MACjFC,aAAa,EAAE;IACjB,EACF;;IAEA;IACAZ,MAAM,CAACc,MAAM,CAACC,WAAW,CAAC,aAAa,EAAE;MACvCC,IAAI,EAAE,SAAS;MACfC,OAAO,EAAE,IAAI;MACbC,KAAK,EAAE,CACL;QAAEC,KAAK,EAAE,SAAS;QAAEC,UAAU,EAAE,QAAQ;QAAEC,SAAS,EAAE;MAAO,CAAC,EAC7D;QAAEF,KAAK,EAAE,QAAQ;QAAEC,UAAU,EAAE;MAAS,CAAC,EACzC;QAAED,KAAK,EAAE,QAAQ;QAAEC,UAAU,EAAE;MAAS,CAAC,EACzC;QAAED,KAAK,EAAE,SAAS;QAAEC,UAAU,EAAE,QAAQ;QAAEC,SAAS,EAAE;MAAS,EAC/D;MACDC,MAAM,EAAE;QACN,mBAAmB,EAAE,SAAS;QAC9B,mBAAmB,EAAE,SAAS;QAC9B,gCAAgC,EAAE,SAAS;QAC3C,yBAAyB,EAAE,SAAS;QACpC,4BAA4B,EAAE;MAChC;IACF,CAAC;IAED,IAAIR,MAAM,GAAG,IAAG;IAChB,IAAMS,eAAe,GAAGnB,GAAG,CAAC,IAAI;IAEhC,IAAMoB,cAAc,GAAG;MACrBC,KAAK,EAAE,aAAa;MACpBC,QAAQ,EAAE,EAAE;MACZC,OAAO,EAAE;QAAEC,OAAO,EAAE;MAAM,CAAC;MAC3BC,oBAAoB,EAAE,KAAK;MAC3BC,eAAe,EAAE,IAAI;MACrBC,OAAO,EAAE,CAAC;MACVC,QAAQ,EAAE,IAAI;MACdC,cAAc,EAAE,QAAQ;MACxBC,UAAU,EAAE,UAAU;MACtBC,aAAa,EAAE,IAAI;MACnBC,YAAY,EAAE,IAAI;MAClBC,0BAA0B,EAAE,IAAI;MAChCC,kBAAkB,EAAE,KAAK;MACzBC,WAAW,EAAE,IAAI;MACjBC,gBAAgB,EAAE,WAAW;MAC7BC,aAAa,EAAE,QAAQ;MACvBC,mBAAmB,EAAE,QAAQ;MAC7BC,iBAAiB,EAAE,QAAQ;MAC3BC,OAAO,EAAE,IAAI;MACbC,mBAAmB,EAAE;IACvB;IAEA,IAAMC,yBAAyB,GAAG,SAA5BA,yBAAyBA,CAAA,EAAS;MACtC,IAAIzC,KAAK,CAAC0C,QAAQ,KAAK,QAAQ,EAAE;QAC/B/C,MAAM,CAACgD,SAAS,CAACC,8BAA8B,CAAC,QAAQ,EAAE;UACxDC,sBAAsB,EAAE,SAAxBA,sBAAsBA,CAAA,EAAQ;YAC5B,IAAMC,WAAW,GAAG1C,cAAc,CAAC2C,GAAG,CAAC,UAAAC,OAAO;cAAA,OAAK;gBACjD3C,KAAK,EAAE2C,OAAO,CAAC3C,KAAK;gBACpB4C,IAAI,EAAEtD,MAAM,CAACgD,SAAS,CAACO,kBAAkB,CAACC,OAAO;gBACjD7C,UAAU,EAAE0C,OAAO,CAAC1C,UAAU;gBAC9B8C,eAAe,EAAEzD,MAAM,CAACgD,SAAS,CAACU,4BAA4B,CAACC,eAAe;gBAC9E/C,aAAa,EAAEyC,OAAO,CAACzC;cACzB,CAAC;YAAA,CAAC;YACF,OAAO;cAAEuC,WAAW,EAAXA;YAAY;UACvB;QACF,CAAC;MACH,CAAC,MAAM,IAAI9C,KAAK,CAAC0C,QAAQ,KAAK,KAAK,EAAE;QACnC/C,MAAM,CAACgD,SAAS,CAACC,8BAA8B,CAAC,KAAK,EAAE;UACrDC,sBAAsB,EAAE,SAAxBA,sBAAsBA,CAAA,EAAQ;YAC5B,IAAMC,WAAW,GAAGtC,WAAW,CAACuC,GAAG,CAAC,UAAAC,OAAO;cAAA,OAAK;gBAC9C3C,KAAK,EAAE2C,OAAO,CAAC3C,KAAK;gBACpB4C,IAAI,EAAEtD,MAAM,CAACgD,SAAS,CAACO,kBAAkB,CAACC,OAAO;gBACjD7C,UAAU,EAAE0C,OAAO,CAAC1C,UAAU;gBAC9B8C,eAAe,EAAEzD,MAAM,CAACgD,SAAS,CAACU,4BAA4B,CAACC,eAAe;gBAC9E/C,aAAa,EAAEyC,OAAO,CAACzC;cACzB,CAAC;YAAA,CAAC;YACF,OAAO;cAAEuC,WAAW,EAAXA;YAAY;UACvB;QACF,CAAC;MACH;IACF;IAEA,IAAMS,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;MACvB,IAAMC,OAAO,GAAAC,aAAA,CAAAA,aAAA,CAAAA,aAAA,KACRtC,cAAc,GACdnB,KAAK,CAACwD,OAAO;QAChBE,KAAK,EAAE1D,KAAK,CAAC2D,UAAU;QACvBjB,QAAQ,EAAE1C,KAAK,CAAC0C,QAAQ;QACxBkB,QAAQ,EAAE5D,KAAK,CAAC4D;MAAO,EACzB;MAEAnD,MAAM,GAAGd,MAAM,CAACc,MAAM,CAACoD,MAAM,CAAC3C,eAAe,CAACwC,KAAK,EAAEF,OAAO;MAC5Df,yBAAyB,CAAC;MAE1BhC,MAAM,CAACqD,uBAAuB,CAAC,YAAM;QACnC,IAAMJ,KAAK,GAAGjD,MAAM,CAACsD,QAAQ,CAAC;QAC9B7D,IAAI,CAAC,mBAAmB,EAAEwD,KAAK;QAC/BxD,IAAI,CAAC,QAAQ,EAAEwD,KAAK;MACtB,CAAC;MAEDjD,MAAM,CAACuD,UAAU,CAACrE,MAAM,CAACsE,MAAM,CAACC,OAAO,GAAGvE,MAAM,CAACwE,OAAO,CAACC,IAAI,EAAE,YAAM;QACnElE,IAAI,CAAC,MAAM,EAAEO,MAAM,CAACsD,QAAQ,CAAC,CAAC;MAChC,CAAC;;MAED;MACAtD,MAAM,CAACuD,UAAU,CAACrE,MAAM,CAACsE,MAAM,CAACI,GAAG,GAAG1E,MAAM,CAACsE,MAAM,CAACK,KAAK,GAAG3E,MAAM,CAACwE,OAAO,CAACI,IAAI,EAAE,YAAM;QACrF9D,MAAM,CAAC+D,SAAS,CAAC,8BAA8B,CAAC,CAACC,GAAG,CAAC;MACvD,CAAC;IACH;IAEA7E,SAAS,CAAC,YAAM;MACd2D,UAAU,CAAC;IACb,CAAC;IAED1D,eAAe,CAAC,YAAM;MACpB,IAAIY,MAAM,EAAE;QACVA,MAAM,CAACiE,OAAO,CAAC;MACjB;IACF,CAAC;IAED5E,KAAK,CAAC;MAAA,OAAME,KAAK,CAAC2D,UAAU;IAAA,GAAE,UAACgB,QAAQ,EAAK;MAC1C,IAAIlE,MAAM,IAAIkE,QAAQ,KAAKlE,MAAM,CAACsD,QAAQ,CAAC,CAAC,EAAE;QAC5CtD,MAAM,CAACmE,QAAQ,CAACD,QAAQ;MAC1B;IACF,CAAC;IAED7E,KAAK,CAAC;MAAA,OAAME,KAAK,CAAC0C,QAAQ;IAAA,GAAE,UAACiC,QAAQ,EAAK;MACxC,IAAIlE,MAAM,EAAE;QACVd,MAAM,CAACc,MAAM,CAACoE,gBAAgB,CAACpE,MAAM,CAACqE,QAAQ,CAAC,CAAC,EAAEH,QAAQ;QAC1DlC,yBAAyB,CAAC;MAC5B;IACF,CAAC;IAED3C,KAAK,CAAC;MAAA,OAAME,KAAK,CAAC4D,QAAQ;IAAA,GAAE,UAACe,QAAQ,EAAK;MACxC,IAAIlE,MAAM,EAAE;QACVA,MAAM,CAACsE,aAAa,CAAC;UAAEnB,QAAQ,EAAEe;QAAS,CAAC;MAC7C;IACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}