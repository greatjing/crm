{"ast":null,"code":"import { createVNode as _createVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, vShow as _vShow, createElementVNode as _createElementVNode, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"monaco-editor-wrapper\"\n};\nvar _hoisted_2 = {\n  \"class\": \"editor-loading\"\n};\nvar _hoisted_3 = {\n  \"class\": \"monaco-editor-container\",\n  ref: \"editorContainer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_icon = _resolveComponent(\"el-icon\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_withDirectives(_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_el_icon, {\n    \"class\": \"is-loading\"\n  }, {\n    \"default\": _withCtx(function () {\n      return [_createVNode($setup[\"Loading\"])];\n    }),\n    _: 1 /* STABLE */\n  })], 512 /* NEED_PATCH */), [[_vShow, !$setup.isEditorReady]]), _createElementVNode(\"div\", _hoisted_3, null, 512 /* NEED_PATCH */)]);\n}","map":{"version":3,"names":["ref","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createVNode","_component_el_icon","_withCtx","$setup","_","isEditorReady","_hoisted_3"],"sources":["/Users/guojingjing/2024-ai-code/crm/frontend/src/components/MonacoEditor.vue"],"sourcesContent":["<template>\n  <div class=\"monaco-editor-wrapper\">\n    <div v-show=\"!isEditorReady\" class=\"editor-loading\">\n      <el-icon class=\"is-loading\"><Loading /></el-icon>\n    </div>\n    <div class=\"monaco-editor-container\" ref=\"editorContainer\"></div>\n  </div>\n</template>\n\n<script setup>\nimport * as monaco from 'monaco-editor'\nimport { onMounted, onBeforeUnmount, watch, ref } from 'vue'\nimport { Loading } from '@element-plus/icons-vue'\n\nconst isEditorReady = ref(false)\n\n// 添加debounce函数\nconst debounce = (fn, delay) => {\n  let timer;\n  return (...args) => {\n    if (timer) {\n      clearTimeout(timer);\n    }\n    timer = setTimeout(() => {\n      fn(...args);\n    }, delay);\n  };\n};\n\n// 重写ResizeObserver，减少触发频率\nconst _ResizeObserver = window.ResizeObserver;\nwindow.ResizeObserver = class ResizeObserver extends _ResizeObserver {\n  constructor(callback) {\n    callback = debounce(callback, 100); // 减少延迟时间\n    super(callback);\n  }\n};\n\nconst props = defineProps({\n  modelValue: {\n    type: String,\n    default: ''\n  },\n  language: {\n    type: String,\n    default: 'javascript'\n  }\n})\n\nconst emit = defineEmits(['update:modelValue'])\nconst editorContainer = ref(null)\nlet editor = null\n\n// 配置编辑器主题\nmonaco.editor.defineTheme('custom-theme', {\n  base: 'vs-dark',\n  inherit: true,\n  rules: [\n    { token: 'comment', foreground: '6A9955', fontStyle: 'italic' },\n    { token: 'keyword', foreground: '569cd6' },\n    { token: 'string', foreground: 'ce9178' },\n    { token: 'number', foreground: 'b5cea8' }\n  ],\n  colors: {\n    'editor.background': '#1e1e1e',\n    'editor.foreground': '#d4d4d4',\n    'editorCursor.foreground': '#ffffff',\n    'editor.lineHighlightBackground': '#2c313a',\n    'editorLineNumber.foreground': '#858585',\n    'editor.selectionBackground': '#264f78',\n    'editor.inactiveSelectionBackground': '#3a3d41'\n  }\n})\n\n// 优化默认选项，移除一些不必要的选项\nconst defaultOptions = {\n  theme: 'custom-theme',\n  fontSize: 14,\n  lineNumbers: 'on',\n  minimap: { enabled: false },\n  scrollBeyondLastLine: false,\n  automaticLayout: true,\n  tabSize: 2,\n  wordWrap: 'on',\n  folding: true,\n  contextmenu: true,\n  scrollbar: {\n    vertical: 'visible',\n    horizontal: 'visible'\n  }\n}\n\n// SQL 代码片段\nconst sqlSnippets = [\n  {\n    label: 'SELECT',\n    insertText: 'SELECT ${1:*} FROM ${2:table_name} WHERE ${3:condition}',\n    documentation: '查询数据',\n    kind: monaco.languages.CompletionItemKind.Snippet\n  },\n  {\n    label: 'INSERT',\n    insertText: 'INSERT INTO ${1:table_name} (${2:columns}) VALUES (${3:values})',\n    documentation: '插入数据',\n    kind: monaco.languages.CompletionItemKind.Snippet\n  },\n  {\n    label: 'UPDATE',\n    insertText: 'UPDATE ${1:table_name} SET ${2:column} = ${3:value} WHERE ${4:condition}',\n    documentation: '更新数据',\n    kind: monaco.languages.CompletionItemKind.Snippet\n  },\n  {\n    label: 'DELETE',\n    insertText: 'DELETE FROM ${1:table_name} WHERE ${2:condition}',\n    documentation: '删除数据',\n    kind: monaco.languages.CompletionItemKind.Snippet\n  }\n]\n\n// Python 代码片段\nconst pythonSnippets = [\n  {\n    label: 'def',\n    insertText: 'def ${1:function_name}(${2:parameters}):\\n\\t${3:pass}',\n    documentation: '定义函数',\n    kind: monaco.languages.CompletionItemKind.Snippet\n  },\n  {\n    label: 'class',\n    insertText: 'class ${1:ClassName}:\\n\\tdef __init__(self):\\n\\t\\t${2:pass}',\n    documentation: '定义类',\n    kind: monaco.languages.CompletionItemKind.Snippet\n  },\n  {\n    label: 'if',\n    insertText: 'if ${1:condition}:\\n\\t${2:pass}',\n    documentation: 'if 条件语句',\n    kind: monaco.languages.CompletionItemKind.Snippet\n  },\n  {\n    label: 'for',\n    insertText: 'for ${1:item} in ${2:items}:\\n\\t${3:pass}',\n    documentation: 'for 循环',\n    kind: monaco.languages.CompletionItemKind.Snippet\n  }\n]\n\n// 延迟注册代码提示\nconst registerCompletionProvider = debounce(() => {\n  if (props.language === 'sql') {\n    monaco.languages.registerCompletionItemProvider('sql', {\n      provideCompletionItems: () => ({\n        suggestions: sqlSnippets.map(snippet => ({\n          ...snippet,\n          insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet\n        }))\n      })\n    })\n  } else if (props.language === 'python') {\n    monaco.languages.registerCompletionItemProvider('python', {\n      provideCompletionItems: () => ({\n        suggestions: pythonSnippets.map(snippet => ({\n          ...snippet,\n          insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet\n        }))\n      })\n    })\n  }\n}, 500)\n\nconst initEditor = () => {\n  if (!editorContainer.value) {\n    console.error('Editor container not found')\n    return\n  }\n\n  // 销毁旧的编辑器实例\n  if (editor) {\n    editor.dispose()\n  }\n\n  const options = {\n    ...defaultOptions,\n    value: props.modelValue || '',\n    language: props.language\n  }\n\n  editor = monaco.editor.create(editorContainer.value, options)\n  console.log('Editor initialized with value:', props.modelValue)\n\n  // 监听内容变化\n  editor.onDidChangeModelContent(debounce(() => {\n    const value = editor.getValue()\n    if (value !== props.modelValue) {\n      emit('update:modelValue', value)\n    }\n  }, 100))\n\n  // 使用优化后的ResizeObserver\n  const resizeObserver = new ResizeObserver(() => {\n    if (editor) {\n      editor.layout()\n    }\n  })\n\n  resizeObserver.observe(editorContainer.value)\n  editor._resizeObserver = resizeObserver\n\n  // 设置初始值\n  if (props.modelValue) {\n    console.log('Setting initial value:', props.modelValue)\n    editor.setValue(props.modelValue)\n  }\n\n  // 延迟注册代码提示\n  registerCompletionProvider()\n  \n  isEditorReady.value = true\n}\n\nonMounted(() => {\n  console.log('Component mounted, modelValue:', props.modelValue)\n  initEditor()\n})\n\nonBeforeUnmount(() => {\n  if (editor) {\n    if (editor._resizeObserver) {\n      editor._resizeObserver.disconnect()\n    }\n    editor.dispose()\n  }\n})\n\n// 优化 watch\nwatch(() => props.modelValue, (newValue) => {\n  console.log('Watch triggered, new value:', newValue)\n  if (editor && newValue !== editor.getValue()) {\n    const position = editor.getPosition()\n    editor.setValue(newValue || '')\n    if (position) {\n      editor.setPosition(position)\n    }\n  }\n}, { immediate: true })\n\nwatch(() => props.language, (newValue) => {\n  if (editor) {\n    monaco.editor.setModelLanguage(editor.getModel(), newValue)\n    registerCompletionProvider()\n  }\n})\n</script>\n\n<style>\n.monaco-editor-wrapper {\n  position: relative;\n  width: 100%;\n  height: 100%;\n  border: 1px solid #dcdfe6;\n  border-radius: 4px;\n  overflow: hidden;\n}\n\n.editor-loading {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: rgba(255, 255, 255, 0.9);\n  z-index: 1;\n}\n\n.monaco-editor-container {\n  width: 100%;\n  height: 100%;\n}\n\n.monaco-editor {\n  width: 100% !important;\n  height: 100% !important;\n}\n</style> "],"mappings":";;EACO,SAAM;AAAuB;;EACH,SAAM;AAAgB;;EAG9C,SAAM,yBAAyB;EAACA,GAAG,EAAC;;;;uBAJ3CC,mBAAA,CAKM,OALNC,UAKM,G,gBAJJC,mBAAA,CAEM,OAFNC,UAEM,GADJC,YAAA,CAAiDC,kBAAA;IAAxC,SAAM;EAAY;IAHjC,WAAAC,QAAA,CAGkC;MAAA,OAAW,CAAXF,YAAA,CAAWG,MAAA,a;;IAH7CC,CAAA;yCAEkBD,MAAA,CAAAE,aAAa,E,GAG3BP,mBAAA,CAAiE,OAAjEQ,UAAiE,8B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}