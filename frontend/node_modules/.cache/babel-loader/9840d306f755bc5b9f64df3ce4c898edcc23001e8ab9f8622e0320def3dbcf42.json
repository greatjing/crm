{"ast":null,"code":"import \"core-js/modules/es.date.to-json.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\nimport { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, openBlock as _openBlock, createBlock as _createBlock, toDisplayString as _toDisplayString, createElementBlock as _createElementBlock } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"strategy-test\"\n};\nvar _hoisted_2 = {\n  \"class\": \"card-header\"\n};\nvar _hoisted_3 = {\n  \"class\": \"card-header\"\n};\nvar _hoisted_4 = {\n  key: 0,\n  \"class\": \"loading-state\"\n};\nvar _hoisted_5 = {\n  key: 1\n};\nvar _hoisted_6 = {\n  \"class\": \"statistics\"\n};\nvar _hoisted_7 = {\n  \"class\": \"statistic-value\"\n};\nvar _hoisted_8 = {\n  \"class\": \"statistic-value success\"\n};\nvar _hoisted_9 = {\n  \"class\": \"statistic-value danger\"\n};\nvar _hoisted_10 = {\n  \"class\": \"statistic-value warning\"\n};\nvar _hoisted_11 = {\n  \"class\": \"statistic-value\"\n};\nvar _hoisted_12 = {\n  \"class\": \"statistic-value\"\n};\nvar _hoisted_13 = {\n  \"class\": \"statistic-value\"\n};\nvar _hoisted_14 = {\n  \"class\": \"charts mt-4\"\n};\nvar _hoisted_15 = [\"src\"];\nvar _hoisted_16 = [\"src\"];\nvar _hoisted_17 = [\"src\"];\nvar _hoisted_18 = {\n  \"class\": \"test-cases mt-4\"\n};\nvar _hoisted_19 = {\n  key: 0\n};\nvar _hoisted_20 = {\n  key: 0,\n  \"class\": \"error-message\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_input_number = _resolveComponent(\"el-input-number\");\n  var _component_el_form_item = _resolveComponent(\"el-form-item\");\n  var _component_el_col = _resolveComponent(\"el-col\");\n  var _component_el_switch = _resolveComponent(\"el-switch\");\n  var _component_el_button = _resolveComponent(\"el-button\");\n  var _component_el_form = _resolveComponent(\"el-form\");\n  var _component_el_card = _resolveComponent(\"el-card\");\n  var _component_el_table_column = _resolveComponent(\"el-table-column\");\n  var _component_el_table = _resolveComponent(\"el-table\");\n  var _component_el_tag = _resolveComponent(\"el-tag\");\n  var _component_Loading = _resolveComponent(\"Loading\");\n  var _component_el_icon = _resolveComponent(\"el-icon\");\n  var _component_el_row = _resolveComponent(\"el-row\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[29] || (_cache[29] = _createElementVNode(\"div\", {\n    \"class\": \"header\"\n  }, [_createElementVNode(\"h2\", null, \"策略测试\")], -1 /* HOISTED */)), _createCommentVNode(\" 测试数据生成器 \"), _createVNode(_component_el_card, {\n    \"class\": \"data-generator\"\n  }, {\n    header: _withCtx(function () {\n      return _cache[8] || (_cache[8] = [_createElementVNode(\"div\", {\n        \"class\": \"card-header\"\n      }, [_createElementVNode(\"span\", null, \"测试数据生成器\")], -1 /* HOISTED */)]);\n    }),\n    \"default\": _withCtx(function () {\n      return [_createVNode(_component_el_form, {\n        model: $setup.generatorConfig,\n        \"label-width\": \"120px\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_form_item, {\n            label: \"生成数量\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input_number, {\n                modelValue: $setup.generatorConfig.count,\n                \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n                  return $setup.generatorConfig.count = $event;\n                }),\n                min: 1,\n                max: 100\n              }, null, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, {\n            label: \"信用分数范围\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_col, {\n                span: 11\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_createVNode(_component_el_input_number, {\n                    modelValue: $setup.generatorConfig.data_patterns.credit_score.min,\n                    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n                      return $setup.generatorConfig.data_patterns.credit_score.min = $event;\n                    }),\n                    min: 300,\n                    max: 850\n                  }, null, 8 /* PROPS */, [\"modelValue\"])];\n                }),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_el_col, {\n                span: 2,\n                \"class\": \"text-center\"\n              }, {\n                \"default\": _withCtx(function () {\n                  return _cache[9] || (_cache[9] = [_createTextVNode(\"-\")]);\n                }),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_el_col, {\n                span: 11\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_createVNode(_component_el_input_number, {\n                    modelValue: $setup.generatorConfig.data_patterns.credit_score.max,\n                    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = function ($event) {\n                      return $setup.generatorConfig.data_patterns.credit_score.max = $event;\n                    }),\n                    min: 300,\n                    max: 850\n                  }, null, 8 /* PROPS */, [\"modelValue\"])];\n                }),\n                _: 1 /* STABLE */\n              })];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, {\n            label: \"贷款金额范围\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_col, {\n                span: 11\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_createVNode(_component_el_input_number, {\n                    modelValue: $setup.generatorConfig.data_patterns.loan_amount.min,\n                    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = function ($event) {\n                      return $setup.generatorConfig.data_patterns.loan_amount.min = $event;\n                    }),\n                    min: 1000,\n                    max: 1000000\n                  }, null, 8 /* PROPS */, [\"modelValue\"])];\n                }),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_el_col, {\n                span: 2,\n                \"class\": \"text-center\"\n              }, {\n                \"default\": _withCtx(function () {\n                  return _cache[10] || (_cache[10] = [_createTextVNode(\"-\")]);\n                }),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_el_col, {\n                span: 11\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_createVNode(_component_el_input_number, {\n                    modelValue: $setup.generatorConfig.data_patterns.loan_amount.max,\n                    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = function ($event) {\n                      return $setup.generatorConfig.data_patterns.loan_amount.max = $event;\n                    }),\n                    min: 1000,\n                    max: 1000000\n                  }, null, 8 /* PROPS */, [\"modelValue\"])];\n                }),\n                _: 1 /* STABLE */\n              })];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, {\n            label: \"年收入范围\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_col, {\n                span: 11\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_createVNode(_component_el_input_number, {\n                    modelValue: $setup.generatorConfig.data_patterns.annual_income.min,\n                    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = function ($event) {\n                      return $setup.generatorConfig.data_patterns.annual_income.min = $event;\n                    }),\n                    min: 10000,\n                    max: 1000000\n                  }, null, 8 /* PROPS */, [\"modelValue\"])];\n                }),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_el_col, {\n                span: 2,\n                \"class\": \"text-center\"\n              }, {\n                \"default\": _withCtx(function () {\n                  return _cache[11] || (_cache[11] = [_createTextVNode(\"-\")]);\n                }),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_el_col, {\n                span: 11\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_createVNode(_component_el_input_number, {\n                    modelValue: $setup.generatorConfig.data_patterns.annual_income.max,\n                    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = function ($event) {\n                      return $setup.generatorConfig.data_patterns.annual_income.max = $event;\n                    }),\n                    min: 10000,\n                    max: 1000000\n                  }, null, 8 /* PROPS */, [\"modelValue\"])];\n                }),\n                _: 1 /* STABLE */\n              })];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, {\n            label: \"包含边界值\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_switch, {\n                modelValue: $setup.generatorConfig.include_edge_cases,\n                \"onUpdate:modelValue\": _cache[7] || (_cache[7] = function ($event) {\n                  return $setup.generatorConfig.include_edge_cases = $event;\n                })\n              }, null, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, null, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_button, {\n                type: \"primary\",\n                onClick: $setup.generateData\n              }, {\n                \"default\": _withCtx(function () {\n                  return _cache[12] || (_cache[12] = [_createTextVNode(\"生成测试数据\")]);\n                }),\n                _: 1 /* STABLE */\n              })];\n            }),\n            _: 1 /* STABLE */\n          })];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"model\"])];\n    }),\n    _: 1 /* STABLE */\n  }), _createCommentVNode(\" 测试数据预览 \"), $setup.testData.length > 0 ? (_openBlock(), _createBlock(_component_el_card, {\n    key: 0,\n    \"class\": \"data-preview\"\n  }, {\n    header: _withCtx(function () {\n      return [_createElementVNode(\"div\", _hoisted_2, [_cache[14] || (_cache[14] = _createElementVNode(\"span\", null, \"测试数据预览\", -1 /* HOISTED */)), _createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: $setup.runTests\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[13] || (_cache[13] = [_createTextVNode(\"运行测试\")]);\n        }),\n        _: 1 /* STABLE */\n      })])];\n    }),\n    \"default\": _withCtx(function () {\n      return [_createVNode(_component_el_table, {\n        data: $setup.testData,\n        height: \"400\",\n        border: \"\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_table_column, {\n            prop: \"input_data.credit_score\",\n            label: \"信用分数\",\n            width: \"120\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"input_data.loan_amount\",\n            label: \"贷款金额\",\n            width: \"120\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"input_data.annual_income\",\n            label: \"年收入\",\n            width: \"120\"\n          })];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"data\"])];\n    }),\n    _: 1 /* STABLE */\n  })) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 测试结果 \"), $setup.currentBatchId ? (_openBlock(), _createBlock(_component_el_card, {\n    key: 1,\n    \"class\": \"test-results\"\n  }, {\n    header: _withCtx(function () {\n      return [_createElementVNode(\"div\", _hoisted_3, [_cache[16] || (_cache[16] = _createElementVNode(\"span\", null, \"测试结果\", -1 /* HOISTED */)), _createElementVNode(\"div\", null, [_createVNode(_component_el_tag, {\n        type: $setup.getBatchStatusType($setup.batchStatus)\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createTextVNode(_toDisplayString($setup.getBatchStatusText($setup.batchStatus)), 1 /* TEXT */)];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"type\"]), $setup.testReport ? (_openBlock(), _createBlock(_component_el_button, {\n        key: 0,\n        type: \"primary\",\n        \"class\": \"ml-2\",\n        onClick: $setup.exportReport\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[15] || (_cache[15] = [_createTextVNode(\"导出报告\")]);\n        }),\n        _: 1 /* STABLE */\n      })) : _createCommentVNode(\"v-if\", true)])])];\n    }),\n    \"default\": _withCtx(function () {\n      return [$setup.batchStatus === 'running' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createVNode(_component_el_icon, {\n        \"class\": \"is-loading\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_Loading)];\n        }),\n        _: 1 /* STABLE */\n      }), _cache[17] || (_cache[17] = _createElementVNode(\"p\", null, \"正在执行测试...\", -1 /* HOISTED */))])) : $setup.testReport ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createCommentVNode(\" 测试统计 \"), _createElementVNode(\"div\", _hoisted_6, [_createVNode(_component_el_row, {\n        gutter: 20\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_col, {\n            span: 6\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_card, {\n                shadow: \"hover\"\n              }, {\n                header: _withCtx(function () {\n                  return _cache[18] || (_cache[18] = [_createTextVNode(\"总用例数\")]);\n                }),\n                \"default\": _withCtx(function () {\n                  return [_createElementVNode(\"div\", _hoisted_7, _toDisplayString($setup.testReport.statistics.total_cases), 1 /* TEXT */)];\n                }),\n                _: 1 /* STABLE */\n              })];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_col, {\n            span: 6\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_card, {\n                shadow: \"hover\"\n              }, {\n                header: _withCtx(function () {\n                  return _cache[19] || (_cache[19] = [_createTextVNode(\"通过用例数\")]);\n                }),\n                \"default\": _withCtx(function () {\n                  return [_createElementVNode(\"div\", _hoisted_8, _toDisplayString($setup.testReport.statistics.passed_cases), 1 /* TEXT */)];\n                }),\n                _: 1 /* STABLE */\n              })];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_col, {\n            span: 6\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_card, {\n                shadow: \"hover\"\n              }, {\n                header: _withCtx(function () {\n                  return _cache[20] || (_cache[20] = [_createTextVNode(\"失败用例数\")]);\n                }),\n                \"default\": _withCtx(function () {\n                  return [_createElementVNode(\"div\", _hoisted_9, _toDisplayString($setup.testReport.statistics.failed_cases), 1 /* TEXT */)];\n                }),\n                _: 1 /* STABLE */\n              })];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_col, {\n            span: 6\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_card, {\n                shadow: \"hover\"\n              }, {\n                header: _withCtx(function () {\n                  return _cache[21] || (_cache[21] = [_createTextVNode(\"错误用例数\")]);\n                }),\n                \"default\": _withCtx(function () {\n                  return [_createElementVNode(\"div\", _hoisted_10, _toDisplayString($setup.testReport.statistics.error_cases), 1 /* TEXT */)];\n                }),\n                _: 1 /* STABLE */\n              })];\n            }),\n            _: 1 /* STABLE */\n          })];\n        }),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_row, {\n        gutter: 20,\n        \"class\": \"mt-4\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_col, {\n            span: 8\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_card, {\n                shadow: \"hover\"\n              }, {\n                header: _withCtx(function () {\n                  return _cache[22] || (_cache[22] = [_createTextVNode(\"平均执行时间\")]);\n                }),\n                \"default\": _withCtx(function () {\n                  return [_createElementVNode(\"div\", _hoisted_11, _toDisplayString($setup.testReport.statistics.avg_execution_time.toFixed(2)) + \" ms\", 1 /* TEXT */)];\n                }),\n                _: 1 /* STABLE */\n              })];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_col, {\n            span: 8\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_card, {\n                shadow: \"hover\"\n              }, {\n                header: _withCtx(function () {\n                  return _cache[23] || (_cache[23] = [_createTextVNode(\"最长执行时间\")]);\n                }),\n                \"default\": _withCtx(function () {\n                  return [_createElementVNode(\"div\", _hoisted_12, _toDisplayString($setup.testReport.statistics.max_execution_time) + \" ms\", 1 /* TEXT */)];\n                }),\n                _: 1 /* STABLE */\n              })];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_col, {\n            span: 8\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_card, {\n                shadow: \"hover\"\n              }, {\n                header: _withCtx(function () {\n                  return _cache[24] || (_cache[24] = [_createTextVNode(\"最短执行时间\")]);\n                }),\n                \"default\": _withCtx(function () {\n                  return [_createElementVNode(\"div\", _hoisted_13, _toDisplayString($setup.testReport.statistics.min_execution_time) + \" ms\", 1 /* TEXT */)];\n                }),\n                _: 1 /* STABLE */\n              })];\n            }),\n            _: 1 /* STABLE */\n          })];\n        }),\n        _: 1 /* STABLE */\n      })]), _createCommentVNode(\" 图表展示 \"), _createElementVNode(\"div\", _hoisted_14, [_createVNode(_component_el_row, {\n        gutter: 20\n      }, {\n        \"default\": _withCtx(function () {\n          return [$setup.testReport.charts_data.results_distribution ? (_openBlock(), _createBlock(_component_el_col, {\n            key: 0,\n            span: 8\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_card, {\n                shadow: \"hover\",\n                \"class\": \"chart-card\"\n              }, {\n                header: _withCtx(function () {\n                  return _cache[25] || (_cache[25] = [_createTextVNode(\"测试结果分布\")]);\n                }),\n                \"default\": _withCtx(function () {\n                  return [_createElementVNode(\"img\", {\n                    src: 'data:image/png;base64,' + $setup.testReport.charts_data.results_distribution\n                  }, null, 8 /* PROPS */, _hoisted_15)];\n                }),\n                _: 1 /* STABLE */\n              })];\n            }),\n            _: 1 /* STABLE */\n          })) : _createCommentVNode(\"v-if\", true), $setup.testReport.charts_data.risk_level_distribution ? (_openBlock(), _createBlock(_component_el_col, {\n            key: 1,\n            span: 8\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_card, {\n                shadow: \"hover\",\n                \"class\": \"chart-card\"\n              }, {\n                header: _withCtx(function () {\n                  return _cache[26] || (_cache[26] = [_createTextVNode(\"风险等级分布\")]);\n                }),\n                \"default\": _withCtx(function () {\n                  return [_createElementVNode(\"img\", {\n                    src: 'data:image/png;base64,' + $setup.testReport.charts_data.risk_level_distribution\n                  }, null, 8 /* PROPS */, _hoisted_16)];\n                }),\n                _: 1 /* STABLE */\n              })];\n            }),\n            _: 1 /* STABLE */\n          })) : _createCommentVNode(\"v-if\", true), $setup.testReport.charts_data.execution_time_distribution ? (_openBlock(), _createBlock(_component_el_col, {\n            key: 2,\n            span: 8\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_card, {\n                shadow: \"hover\",\n                \"class\": \"chart-card\"\n              }, {\n                header: _withCtx(function () {\n                  return _cache[27] || (_cache[27] = [_createTextVNode(\"执行时间分布\")]);\n                }),\n                \"default\": _withCtx(function () {\n                  return [_createElementVNode(\"img\", {\n                    src: 'data:image/png;base64,' + $setup.testReport.charts_data.execution_time_distribution\n                  }, null, 8 /* PROPS */, _hoisted_17)];\n                }),\n                _: 1 /* STABLE */\n              })];\n            }),\n            _: 1 /* STABLE */\n          })) : _createCommentVNode(\"v-if\", true)];\n        }),\n        _: 1 /* STABLE */\n      })]), _createCommentVNode(\" 测试用例详情 \"), _createElementVNode(\"div\", _hoisted_18, [_createVNode(_component_el_card, {\n        shadow: \"hover\"\n      }, {\n        header: _withCtx(function () {\n          return _cache[28] || (_cache[28] = [_createTextVNode(\"测试用例详情\")]);\n        }),\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_table, {\n            data: $setup.testReport.test_cases,\n            border: \"\",\n            stripe: \"\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_table_column, {\n                prop: \"status\",\n                label: \"状态\",\n                width: \"100\"\n              }, {\n                \"default\": _withCtx(function (_ref) {\n                  var row = _ref.row;\n                  return [_createVNode(_component_el_tag, {\n                    type: $setup.getStatusType(row.status)\n                  }, {\n                    \"default\": _withCtx(function () {\n                      return [_createTextVNode(_toDisplayString($setup.getStatusText(row.status)), 1 /* TEXT */)];\n                    }),\n                    _: 2 /* DYNAMIC */\n                  }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"type\"])];\n                }),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_el_table_column, {\n                prop: \"input_data\",\n                label: \"输入数据\",\n                width: \"300\"\n              }, {\n                \"default\": _withCtx(function (_ref2) {\n                  var row = _ref2.row;\n                  return [_createElementVNode(\"pre\", null, _toDisplayString(JSON.stringify(row.input_data, null, 2)), 1 /* TEXT */)];\n                }),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_el_table_column, {\n                prop: \"actual_output\",\n                label: \"输出结果\",\n                width: \"300\"\n              }, {\n                \"default\": _withCtx(function (_ref3) {\n                  var row = _ref3.row;\n                  return [row.actual_output ? (_openBlock(), _createElementBlock(\"pre\", _hoisted_19, _toDisplayString(JSON.stringify(row.actual_output, null, 2)), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)];\n                }),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_el_table_column, {\n                prop: \"execution_time\",\n                label: \"执行时间\",\n                width: \"120\"\n              }, {\n                \"default\": _withCtx(function (_ref4) {\n                  var row = _ref4.row;\n                  return [_createTextVNode(_toDisplayString(row.execution_time) + \" ms \", 1 /* TEXT */)];\n                }),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_el_table_column, {\n                prop: \"error_message\",\n                label: \"错误信息\",\n                \"min-width\": \"200\"\n              }, {\n                \"default\": _withCtx(function (_ref5) {\n                  var row = _ref5.row;\n                  return [row.error_message ? (_openBlock(), _createElementBlock(\"span\", _hoisted_20, _toDisplayString(row.error_message), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)];\n                }),\n                _: 1 /* STABLE */\n              })];\n            }),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"data\"])];\n        }),\n        _: 1 /* STABLE */\n      })])])) : _createCommentVNode(\"v-if\", true)];\n    }),\n    _: 1 /* STABLE */\n  })) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["key","_createElementBlock","_hoisted_1","_createElementVNode","_createCommentVNode","_createVNode","_component_el_card","header","_withCtx","_cache","_component_el_form","model","$setup","generatorConfig","_component_el_form_item","label","_component_el_input_number","modelValue","count","$event","min","max","_","_component_el_col","span","data_patterns","credit_score","_createTextVNode","loan_amount","annual_income","_component_el_switch","include_edge_cases","_component_el_button","type","onClick","generateData","testData","length","_createBlock","_hoisted_2","runTests","_component_el_table","data","height","border","_component_el_table_column","prop","width","currentBatchId","_hoisted_3","_component_el_tag","getBatchStatusType","batchStatus","_toDisplayString","getBatchStatusText","testReport","exportReport","_hoisted_4","_component_el_icon","_component_Loading","_hoisted_5","_hoisted_6","_component_el_row","gutter","shadow","_hoisted_7","statistics","total_cases","_hoisted_8","passed_cases","_hoisted_9","failed_cases","_hoisted_10","error_cases","_hoisted_11","avg_execution_time","toFixed","_hoisted_12","max_execution_time","_hoisted_13","min_execution_time","_hoisted_14","charts_data","results_distribution","src","_hoisted_15","risk_level_distribution","_hoisted_16","execution_time_distribution","_hoisted_17","_hoisted_18","test_cases","stripe","_ref","row","getStatusType","status","getStatusText","_ref2","JSON","stringify","input_data","_ref3","actual_output","_hoisted_19","_ref4","execution_time","_ref5","error_message","_hoisted_20"],"sources":["/Users/guojingjing/2024-ai-code/crm/frontend/src/views/strategy/StrategyTest.vue"],"sourcesContent":["<template>\n  <div class=\"strategy-test\">\n    <div class=\"header\">\n      <h2>策略测试</h2>\n    </div>\n\n    <!-- 测试数据生成器 -->\n    <el-card class=\"data-generator\">\n      <template #header>\n        <div class=\"card-header\">\n          <span>测试数据生成器</span>\n        </div>\n      </template>\n      \n      <el-form :model=\"generatorConfig\" label-width=\"120px\">\n        <el-form-item label=\"生成数量\">\n          <el-input-number v-model=\"generatorConfig.count\" :min=\"1\" :max=\"100\" />\n        </el-form-item>\n        \n        <el-form-item label=\"信用分数范围\">\n          <el-col :span=\"11\">\n            <el-input-number v-model=\"generatorConfig.data_patterns.credit_score.min\" :min=\"300\" :max=\"850\" />\n          </el-col>\n          <el-col :span=\"2\" class=\"text-center\">-</el-col>\n          <el-col :span=\"11\">\n            <el-input-number v-model=\"generatorConfig.data_patterns.credit_score.max\" :min=\"300\" :max=\"850\" />\n          </el-col>\n        </el-form-item>\n        \n        <el-form-item label=\"贷款金额范围\">\n          <el-col :span=\"11\">\n            <el-input-number v-model=\"generatorConfig.data_patterns.loan_amount.min\" :min=\"1000\" :max=\"1000000\" />\n          </el-col>\n          <el-col :span=\"2\" class=\"text-center\">-</el-col>\n          <el-col :span=\"11\">\n            <el-input-number v-model=\"generatorConfig.data_patterns.loan_amount.max\" :min=\"1000\" :max=\"1000000\" />\n          </el-col>\n        </el-form-item>\n        \n        <el-form-item label=\"年收入范围\">\n          <el-col :span=\"11\">\n            <el-input-number v-model=\"generatorConfig.data_patterns.annual_income.min\" :min=\"10000\" :max=\"1000000\" />\n          </el-col>\n          <el-col :span=\"2\" class=\"text-center\">-</el-col>\n          <el-col :span=\"11\">\n            <el-input-number v-model=\"generatorConfig.data_patterns.annual_income.max\" :min=\"10000\" :max=\"1000000\" />\n          </el-col>\n        </el-form-item>\n        \n        <el-form-item label=\"包含边界值\">\n          <el-switch v-model=\"generatorConfig.include_edge_cases\" />\n        </el-form-item>\n        \n        <el-form-item>\n          <el-button type=\"primary\" @click=\"generateData\">生成测试数据</el-button>\n        </el-form-item>\n      </el-form>\n    </el-card>\n\n    <!-- 测试数据预览 -->\n    <el-card v-if=\"testData.length > 0\" class=\"data-preview\">\n      <template #header>\n        <div class=\"card-header\">\n          <span>测试数据预览</span>\n          <el-button type=\"primary\" @click=\"runTests\">运行测试</el-button>\n        </div>\n      </template>\n      \n      <el-table :data=\"testData\" height=\"400\" border>\n        <el-table-column prop=\"input_data.credit_score\" label=\"信用分数\" width=\"120\" />\n        <el-table-column prop=\"input_data.loan_amount\" label=\"贷款金额\" width=\"120\" />\n        <el-table-column prop=\"input_data.annual_income\" label=\"年收入\" width=\"120\" />\n      </el-table>\n    </el-card>\n\n    <!-- 测试结果 -->\n    <el-card v-if=\"currentBatchId\" class=\"test-results\">\n      <template #header>\n        <div class=\"card-header\">\n          <span>测试结果</span>\n          <div>\n            <el-tag :type=\"getBatchStatusType(batchStatus)\">{{ getBatchStatusText(batchStatus) }}</el-tag>\n            <el-button v-if=\"testReport\" type=\"primary\" class=\"ml-2\" @click=\"exportReport\">导出报告</el-button>\n          </div>\n        </div>\n      </template>\n      \n      <div v-if=\"batchStatus === 'running'\" class=\"loading-state\">\n        <el-icon class=\"is-loading\"><Loading /></el-icon>\n        <p>正在执行测试...</p>\n      </div>\n\n      <div v-else-if=\"testReport\">\n        <!-- 测试统计 -->\n        <div class=\"statistics\">\n          <el-row :gutter=\"20\">\n            <el-col :span=\"6\">\n              <el-card shadow=\"hover\">\n                <template #header>总用例数</template>\n                <div class=\"statistic-value\">{{ testReport.statistics.total_cases }}</div>\n              </el-card>\n            </el-col>\n            <el-col :span=\"6\">\n              <el-card shadow=\"hover\">\n                <template #header>通过用例数</template>\n                <div class=\"statistic-value success\">{{ testReport.statistics.passed_cases }}</div>\n              </el-card>\n            </el-col>\n            <el-col :span=\"6\">\n              <el-card shadow=\"hover\">\n                <template #header>失败用例数</template>\n                <div class=\"statistic-value danger\">{{ testReport.statistics.failed_cases }}</div>\n              </el-card>\n            </el-col>\n            <el-col :span=\"6\">\n              <el-card shadow=\"hover\">\n                <template #header>错误用例数</template>\n                <div class=\"statistic-value warning\">{{ testReport.statistics.error_cases }}</div>\n              </el-card>\n            </el-col>\n          </el-row>\n          \n          <el-row :gutter=\"20\" class=\"mt-4\">\n            <el-col :span=\"8\">\n              <el-card shadow=\"hover\">\n                <template #header>平均执行时间</template>\n                <div class=\"statistic-value\">{{ testReport.statistics.avg_execution_time.toFixed(2) }} ms</div>\n              </el-card>\n            </el-col>\n            <el-col :span=\"8\">\n              <el-card shadow=\"hover\">\n                <template #header>最长执行时间</template>\n                <div class=\"statistic-value\">{{ testReport.statistics.max_execution_time }} ms</div>\n              </el-card>\n            </el-col>\n            <el-col :span=\"8\">\n              <el-card shadow=\"hover\">\n                <template #header>最短执行时间</template>\n                <div class=\"statistic-value\">{{ testReport.statistics.min_execution_time }} ms</div>\n              </el-card>\n            </el-col>\n          </el-row>\n        </div>\n        \n        <!-- 图表展示 -->\n        <div class=\"charts mt-4\">\n          <el-row :gutter=\"20\">\n            <el-col :span=\"8\" v-if=\"testReport.charts_data.results_distribution\">\n              <el-card shadow=\"hover\" class=\"chart-card\">\n                <template #header>测试结果分布</template>\n                <img :src=\"'data:image/png;base64,' + testReport.charts_data.results_distribution\" />\n              </el-card>\n            </el-col>\n            <el-col :span=\"8\" v-if=\"testReport.charts_data.risk_level_distribution\">\n              <el-card shadow=\"hover\" class=\"chart-card\">\n                <template #header>风险等级分布</template>\n                <img :src=\"'data:image/png;base64,' + testReport.charts_data.risk_level_distribution\" />\n              </el-card>\n            </el-col>\n            <el-col :span=\"8\" v-if=\"testReport.charts_data.execution_time_distribution\">\n              <el-card shadow=\"hover\" class=\"chart-card\">\n                <template #header>执行时间分布</template>\n                <img :src=\"'data:image/png;base64,' + testReport.charts_data.execution_time_distribution\" />\n              </el-card>\n            </el-col>\n          </el-row>\n        </div>\n        \n        <!-- 测试用例详情 -->\n        <div class=\"test-cases mt-4\">\n          <el-card shadow=\"hover\">\n            <template #header>测试用例详情</template>\n            <el-table :data=\"testReport.test_cases\" border stripe>\n              <el-table-column prop=\"status\" label=\"状态\" width=\"100\">\n                <template #default=\"{ row }\">\n                  <el-tag :type=\"getStatusType(row.status)\">{{ getStatusText(row.status) }}</el-tag>\n                </template>\n              </el-table-column>\n              <el-table-column prop=\"input_data\" label=\"输入数据\" width=\"300\">\n                <template #default=\"{ row }\">\n                  <pre>{{ JSON.stringify(row.input_data, null, 2) }}</pre>\n                </template>\n              </el-table-column>\n              <el-table-column prop=\"actual_output\" label=\"输出结果\" width=\"300\">\n                <template #default=\"{ row }\">\n                  <pre v-if=\"row.actual_output\">{{ JSON.stringify(row.actual_output, null, 2) }}</pre>\n                </template>\n              </el-table-column>\n              <el-table-column prop=\"execution_time\" label=\"执行时间\" width=\"120\">\n                <template #default=\"{ row }\">\n                  {{ row.execution_time }} ms\n                </template>\n              </el-table-column>\n              <el-table-column prop=\"error_message\" label=\"错误信息\" min-width=\"200\">\n                <template #default=\"{ row }\">\n                  <span class=\"error-message\" v-if=\"row.error_message\">{{ row.error_message }}</span>\n                </template>\n              </el-table-column>\n            </el-table>\n          </el-card>\n        </div>\n      </div>\n    </el-card>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue'\nimport { useRoute } from 'vue-router'\nimport { ElMessage } from 'element-plus'\nimport { testApi } from '@/api/test'\n// import { strategyApi } from '@/api/strategy'\n\nconst route = useRoute()\nconst strategyId = route.params.id\n\nconst generatorConfig = ref({\n  count: 10,\n  data_patterns: {\n    credit_score: {\n      type: 'random_int',\n      min: 300,\n      max: 850\n    },\n    loan_amount: {\n      type: 'random_float',\n      min: 1000,\n      max: 1000000\n    },\n    annual_income: {\n      type: 'random_float',\n      min: 10000,\n      max: 1000000\n    }\n  },\n  include_edge_cases: true\n})\n\nconst testData = ref([])\nconst currentBatchId = ref(null)\nconst testReport = ref(null)\nconst pollingTimer = ref(null)\nconst batchStatus = ref('pending')\n\nconst generateData = async () => {\n  try {\n    const response = await testApi.generateTestData(generatorConfig.value)\n    testData.value = response.data\n    ElMessage.success('测试数据生成成功')\n  } catch (error) {\n    ElMessage.error('生成测试数据失败：' + error.message)\n  }\n}\n\nconst runTests = async () => {\n  try {\n    const response = await testApi.createTestBatch({\n      name: `策略${strategyId}测试批次`,\n      description: '自动生成的测试批次',\n      strategy_id: parseInt(strategyId),\n      test_cases: testData.value\n    })\n    \n    currentBatchId.value = response.data.id\n    ElMessage.success('测试批次已创建，开始执行测试')\n    console.log('Created test batch:', response.data)\n    \n    // 立即开始轮询\n    await pollTestStatus()\n    startPolling()\n  } catch (error) {\n    console.error('Create test batch error:', error)\n    ElMessage.error('创建测试批次失败：' + (error.response?.data?.detail || error.message))\n  }\n}\n\nconst pollTestStatus = async () => {\n  try {\n    console.log('Polling test status for batch:', currentBatchId.value)\n    const response = await testApi.getTestBatch(currentBatchId.value)\n    console.log('Poll response:', response.data)\n    \n    batchStatus.value = response.data.status\n    if (batchStatus.value === 'completed' || batchStatus.value === 'failed') {\n      console.log('Test batch completed with status:', batchStatus.value)\n      stopPolling()\n      await loadTestReport()\n    } else {\n      console.log('Test batch still running:', batchStatus.value)\n    }\n  } catch (error) {\n    console.error('Poll status error:', error)\n    stopPolling()\n    ElMessage.error('获取测试状态失败：' + (error.response?.data?.detail || error.message))\n  }\n}\n\nconst startPolling = () => {\n  pollingTimer.value = setInterval(pollTestStatus, 2000)\n}\n\nconst stopPolling = () => {\n  if (pollingTimer.value) {\n    clearInterval(pollingTimer.value)\n    pollingTimer.value = null\n  }\n}\n\nconst loadTestReport = async () => {\n  try {\n    console.log('Loading test report for batch:', currentBatchId.value)\n    const response = await testApi.getTestReport(currentBatchId.value)\n    console.log('Test report:', response.data)\n    testReport.value = response.data\n    ElMessage.success('测试执行完成')\n  } catch (error) {\n    console.error('Load report error:', error)\n    ElMessage.error('加载测试报告失败：' + (error.response?.data?.detail || error.message))\n  }\n}\n\nconst exportReport = () => {\n  // TODO: 实现报告导出功能\n  ElMessage.info('报告导出功能开发中')\n}\n\nconst getStatusType = (status) => {\n  const statusMap = {\n    pending: 'info',\n    running: 'warning',\n    passed: 'success',\n    failed: 'danger',\n    error: 'danger'\n  }\n  return statusMap[status] || 'info'\n}\n\n// 添加状态文本映射\nconst getStatusText = (status) => {\n  const statusMap = {\n    pending: '等待执行',\n    running: '执行中',\n    passed: '通过',\n    failed: '失败',\n    error: '错误'\n  }\n  return statusMap[status] || status\n}\n\n// 添加批次状态文本映射\nconst getBatchStatusText = (status) => {\n  const statusMap = {\n    pending: '等待执行',\n    running: '执行中',\n    completed: '执行完成',\n    failed: '执行失败'\n  }\n  return statusMap[status] || status\n}\n\n// 添加批次状态类型映射\nconst getBatchStatusType = (status) => {\n  const statusMap = {\n    pending: 'info',\n    running: 'warning',\n    completed: 'success',\n    failed: 'danger'\n  }\n  return statusMap[status] || 'info'\n}\n\nonMounted(() => {\n  if (!strategyId) {\n    ElMessage.error('策略ID不能为空')\n    return\n  }\n})\n</script>\n\n<style>\n.strategy-test {\n  padding: 20px;\n}\n\n.header {\n  margin-bottom: 20px;\n}\n\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.data-generator {\n  margin-bottom: 20px;\n}\n\n.data-preview {\n  margin-bottom: 20px;\n}\n\n.text-center {\n  text-align: center;\n  line-height: 32px;\n}\n\n.mt-4 {\n  margin-top: 16px;\n}\n\n.chart-container {\n  background: #fff;\n  padding: 16px;\n  border-radius: 4px;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n}\n\n.chart-container h3 {\n  margin-top: 0;\n  margin-bottom: 16px;\n  font-size: 16px;\n}\n\n.chart-container img {\n  width: 100%;\n  height: auto;\n}\n\npre {\n  margin: 0;\n  white-space: pre-wrap;\n  word-wrap: break-word;\n  font-size: 12px;\n}\n\n.loading-state {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 40px;\n}\n\n.loading-state .el-icon {\n  font-size: 32px;\n  margin-bottom: 16px;\n}\n\n.statistic-value {\n  font-size: 24px;\n  font-weight: bold;\n  text-align: center;\n}\n\n.statistic-value.success {\n  color: #67C23A;\n}\n\n.statistic-value.danger {\n  color: #F56C6C;\n}\n\n.statistic-value.warning {\n  color: #E6A23C;\n}\n\n.chart-card {\n  height: 100%;\n}\n\n.chart-card img {\n  width: 100%;\n  height: auto;\n}\n\n.error-message {\n  color: #F56C6C;\n  white-space: pre-wrap;\n  word-break: break-word;\n}\n\n.ml-2 {\n  margin-left: 8px;\n}\n</style>\n"],"mappings":";;;;;EACO,SAAM;AAAe;;EA6Df,SAAM;AAAa;;EAgBnB,SAAM;AAAa;;EA9EhCA,GAAA;EAuF4C,SAAM;;;EAvFlDA,GAAA;AAAA;;EA8Fa,SAAM;AAAY;;EAKV,SAAM;AAAiB;;EAMvB,SAAM;AAAyB;;EAM/B,SAAM;AAAwB;;EAM9B,SAAM;AAAyB;;EAS/B,SAAM;AAAiB;;EAMvB,SAAM;AAAiB;;EAMvB,SAAM;AAAiB;;EAO/B,SAAM;AAAa;kBAjJhC;kBAAA;kBAAA;;EAyKa,SAAM;AAAiB;;EAzKpCA,GAAA;AAAA;;EAAAA,GAAA;EAmMwB,SAAM;;;;;;;;;;;;;;;;uBAlM5BC,mBAAA,CA0MM,OA1MNC,UA0MM,G,4BAzMJC,mBAAA,CAEM;IAFD,SAAM;EAAQ,IACjBA,mBAAA,CAAa,YAAT,MAAI,E,sBAGVC,mBAAA,aAAgB,EAChBC,YAAA,CAkDUC,kBAAA;IAlDD,SAAM;EAAgB;IAClBC,MAAM,EAAAC,QAAA,CACf;MAAA,OAEMC,MAAA,QAAAA,MAAA,OAFNN,mBAAA,CAEM;QAFD,SAAM;MAAa,IACtBA,mBAAA,CAAoB,cAAd,SAAO,E;;IAVvB,WAAAK,QAAA,CAcM;MAAA,OA0CU,CA1CVH,YAAA,CA0CUK,kBAAA;QA1CAC,KAAK,EAAEC,MAAA,CAAAC,eAAe;QAAE,aAAW,EAAC;;QAdpD,WAAAL,QAAA,CAeQ;UAAA,OAEe,CAFfH,YAAA,CAEeS,uBAAA;YAFDC,KAAK,EAAC;UAAM;YAflC,WAAAP,QAAA,CAgBU;cAAA,OAAuE,CAAvEH,YAAA,CAAuEW,0BAAA;gBAhBjFC,UAAA,EAgBoCL,MAAA,CAAAC,eAAe,CAACK,KAAK;gBAhBzD,uBAAAT,MAAA,QAAAA,MAAA,gBAAAU,MAAA;kBAAA,OAgBoCP,MAAA,CAAAC,eAAe,CAACK,KAAK,GAAAC,MAAA;gBAAA;gBAAGC,GAAG,EAAE,CAAC;gBAAGC,GAAG,EAAE;;;YAhB1EC,CAAA;cAmBQjB,YAAA,CAQeS,uBAAA;YARDC,KAAK,EAAC;UAAQ;YAnBpC,WAAAP,QAAA,CAoBU;cAAA,OAES,CAFTH,YAAA,CAESkB,iBAAA;gBAFAC,IAAI,EAAE;cAAE;gBApB3B,WAAAhB,QAAA,CAqBY;kBAAA,OAAkG,CAAlGH,YAAA,CAAkGW,0BAAA;oBArB9GC,UAAA,EAqBsCL,MAAA,CAAAC,eAAe,CAACY,aAAa,CAACC,YAAY,CAACN,GAAG;oBArBpF,uBAAAX,MAAA,QAAAA,MAAA,gBAAAU,MAAA;sBAAA,OAqBsCP,MAAA,CAAAC,eAAe,CAACY,aAAa,CAACC,YAAY,CAACN,GAAG,GAAAD,MAAA;oBAAA;oBAAGC,GAAG,EAAE,GAAG;oBAAGC,GAAG,EAAE;;;gBArBvGC,CAAA;kBAuBUjB,YAAA,CAAgDkB,iBAAA;gBAAvCC,IAAI,EAAE,CAAC;gBAAE,SAAM;;gBAvBlC,WAAAhB,QAAA,CAuBgD;kBAAA,OAACC,MAAA,QAAAA,MAAA,OAvBjDkB,gBAAA,CAuBgD,GAAC,E;;gBAvBjDL,CAAA;kBAwBUjB,YAAA,CAESkB,iBAAA;gBAFAC,IAAI,EAAE;cAAE;gBAxB3B,WAAAhB,QAAA,CAyBY;kBAAA,OAAkG,CAAlGH,YAAA,CAAkGW,0BAAA;oBAzB9GC,UAAA,EAyBsCL,MAAA,CAAAC,eAAe,CAACY,aAAa,CAACC,YAAY,CAACL,GAAG;oBAzBpF,uBAAAZ,MAAA,QAAAA,MAAA,gBAAAU,MAAA;sBAAA,OAyBsCP,MAAA,CAAAC,eAAe,CAACY,aAAa,CAACC,YAAY,CAACL,GAAG,GAAAF,MAAA;oBAAA;oBAAGC,GAAG,EAAE,GAAG;oBAAGC,GAAG,EAAE;;;gBAzBvGC,CAAA;;;YAAAA,CAAA;cA6BQjB,YAAA,CAQeS,uBAAA;YARDC,KAAK,EAAC;UAAQ;YA7BpC,WAAAP,QAAA,CA8BU;cAAA,OAES,CAFTH,YAAA,CAESkB,iBAAA;gBAFAC,IAAI,EAAE;cAAE;gBA9B3B,WAAAhB,QAAA,CA+BY;kBAAA,OAAsG,CAAtGH,YAAA,CAAsGW,0BAAA;oBA/BlHC,UAAA,EA+BsCL,MAAA,CAAAC,eAAe,CAACY,aAAa,CAACG,WAAW,CAACR,GAAG;oBA/BnF,uBAAAX,MAAA,QAAAA,MAAA,gBAAAU,MAAA;sBAAA,OA+BsCP,MAAA,CAAAC,eAAe,CAACY,aAAa,CAACG,WAAW,CAACR,GAAG,GAAAD,MAAA;oBAAA;oBAAGC,GAAG,EAAE,IAAI;oBAAGC,GAAG,EAAE;;;gBA/BvGC,CAAA;kBAiCUjB,YAAA,CAAgDkB,iBAAA;gBAAvCC,IAAI,EAAE,CAAC;gBAAE,SAAM;;gBAjClC,WAAAhB,QAAA,CAiCgD;kBAAA,OAACC,MAAA,SAAAA,MAAA,QAjCjDkB,gBAAA,CAiCgD,GAAC,E;;gBAjCjDL,CAAA;kBAkCUjB,YAAA,CAESkB,iBAAA;gBAFAC,IAAI,EAAE;cAAE;gBAlC3B,WAAAhB,QAAA,CAmCY;kBAAA,OAAsG,CAAtGH,YAAA,CAAsGW,0BAAA;oBAnClHC,UAAA,EAmCsCL,MAAA,CAAAC,eAAe,CAACY,aAAa,CAACG,WAAW,CAACP,GAAG;oBAnCnF,uBAAAZ,MAAA,QAAAA,MAAA,gBAAAU,MAAA;sBAAA,OAmCsCP,MAAA,CAAAC,eAAe,CAACY,aAAa,CAACG,WAAW,CAACP,GAAG,GAAAF,MAAA;oBAAA;oBAAGC,GAAG,EAAE,IAAI;oBAAGC,GAAG,EAAE;;;gBAnCvGC,CAAA;;;YAAAA,CAAA;cAuCQjB,YAAA,CAQeS,uBAAA;YARDC,KAAK,EAAC;UAAO;YAvCnC,WAAAP,QAAA,CAwCU;cAAA,OAES,CAFTH,YAAA,CAESkB,iBAAA;gBAFAC,IAAI,EAAE;cAAE;gBAxC3B,WAAAhB,QAAA,CAyCY;kBAAA,OAAyG,CAAzGH,YAAA,CAAyGW,0BAAA;oBAzCrHC,UAAA,EAyCsCL,MAAA,CAAAC,eAAe,CAACY,aAAa,CAACI,aAAa,CAACT,GAAG;oBAzCrF,uBAAAX,MAAA,QAAAA,MAAA,gBAAAU,MAAA;sBAAA,OAyCsCP,MAAA,CAAAC,eAAe,CAACY,aAAa,CAACI,aAAa,CAACT,GAAG,GAAAD,MAAA;oBAAA;oBAAGC,GAAG,EAAE,KAAK;oBAAGC,GAAG,EAAE;;;gBAzC1GC,CAAA;kBA2CUjB,YAAA,CAAgDkB,iBAAA;gBAAvCC,IAAI,EAAE,CAAC;gBAAE,SAAM;;gBA3ClC,WAAAhB,QAAA,CA2CgD;kBAAA,OAACC,MAAA,SAAAA,MAAA,QA3CjDkB,gBAAA,CA2CgD,GAAC,E;;gBA3CjDL,CAAA;kBA4CUjB,YAAA,CAESkB,iBAAA;gBAFAC,IAAI,EAAE;cAAE;gBA5C3B,WAAAhB,QAAA,CA6CY;kBAAA,OAAyG,CAAzGH,YAAA,CAAyGW,0BAAA;oBA7CrHC,UAAA,EA6CsCL,MAAA,CAAAC,eAAe,CAACY,aAAa,CAACI,aAAa,CAACR,GAAG;oBA7CrF,uBAAAZ,MAAA,QAAAA,MAAA,gBAAAU,MAAA;sBAAA,OA6CsCP,MAAA,CAAAC,eAAe,CAACY,aAAa,CAACI,aAAa,CAACR,GAAG,GAAAF,MAAA;oBAAA;oBAAGC,GAAG,EAAE,KAAK;oBAAGC,GAAG,EAAE;;;gBA7C1GC,CAAA;;;YAAAA,CAAA;cAiDQjB,YAAA,CAEeS,uBAAA;YAFDC,KAAK,EAAC;UAAO;YAjDnC,WAAAP,QAAA,CAkDU;cAAA,OAA0D,CAA1DH,YAAA,CAA0DyB,oBAAA;gBAlDpEb,UAAA,EAkD8BL,MAAA,CAAAC,eAAe,CAACkB,kBAAkB;gBAlDhE,uBAAAtB,MAAA,QAAAA,MAAA,gBAAAU,MAAA;kBAAA,OAkD8BP,MAAA,CAAAC,eAAe,CAACkB,kBAAkB,GAAAZ,MAAA;gBAAA;;;YAlDhEG,CAAA;cAqDQjB,YAAA,CAEeS,uBAAA;YAvDvB,WAAAN,QAAA,CAsDU;cAAA,OAAkE,CAAlEH,YAAA,CAAkE2B,oBAAA;gBAAvDC,IAAI,EAAC,SAAS;gBAAEC,OAAK,EAAEtB,MAAA,CAAAuB;;gBAtD5C,WAAA3B,QAAA,CAsD0D;kBAAA,OAAMC,MAAA,SAAAA,MAAA,QAtDhEkB,gBAAA,CAsD0D,QAAM,E;;gBAtDhEL,CAAA;;;YAAAA,CAAA;;;QAAAA,CAAA;;;IAAAA,CAAA;MA2DIlB,mBAAA,YAAe,EACAQ,MAAA,CAAAwB,QAAQ,CAACC,MAAM,Q,cAA9BC,YAAA,CAaUhC,kBAAA;IAzEdN,GAAA;IA4DwC,SAAM;;IAC7BO,MAAM,EAAAC,QAAA,CACf;MAAA,OAGM,CAHNL,mBAAA,CAGM,OAHNoC,UAGM,G,4BAFJpC,mBAAA,CAAmB,cAAb,QAAM,sBACZE,YAAA,CAA4D2B,oBAAA;QAAjDC,IAAI,EAAC,SAAS;QAAEC,OAAK,EAAEtB,MAAA,CAAA4B;;QAhE5C,WAAAhC,QAAA,CAgEsD;UAAA,OAAIC,MAAA,SAAAA,MAAA,QAhE1DkB,gBAAA,CAgEsD,MAAI,E;;QAhE1DL,CAAA;;;IAAA,WAAAd,QAAA,CAoEM;MAAA,OAIW,CAJXH,YAAA,CAIWoC,mBAAA;QAJAC,IAAI,EAAE9B,MAAA,CAAAwB,QAAQ;QAAEO,MAAM,EAAC,KAAK;QAACC,MAAM,EAAN;;QApE9C,WAAApC,QAAA,CAqEQ;UAAA,OAA2E,CAA3EH,YAAA,CAA2EwC,0BAAA;YAA1DC,IAAI,EAAC,yBAAyB;YAAC/B,KAAK,EAAC,MAAM;YAACgC,KAAK,EAAC;cACnE1C,YAAA,CAA0EwC,0BAAA;YAAzDC,IAAI,EAAC,wBAAwB;YAAC/B,KAAK,EAAC,MAAM;YAACgC,KAAK,EAAC;cAClE1C,YAAA,CAA2EwC,0BAAA;YAA1DC,IAAI,EAAC,0BAA0B;YAAC/B,KAAK,EAAC,KAAK;YAACgC,KAAK,EAAC;;;QAvE3EzB,CAAA;;;IAAAA,CAAA;QAAAlB,mBAAA,gBA2EIA,mBAAA,UAAa,EACEQ,MAAA,CAAAoC,cAAc,I,cAA7BV,YAAA,CA8HUhC,kBAAA;IA1MdN,GAAA;IA4EmC,SAAM;;IACxBO,MAAM,EAAAC,QAAA,CACf;MAAA,OAMM,CANNL,mBAAA,CAMM,OANN8C,UAMM,G,4BALJ9C,mBAAA,CAAiB,cAAX,MAAI,sBACVA,mBAAA,CAGM,cAFJE,YAAA,CAA8F6C,iBAAA;QAArFjB,IAAI,EAAErB,MAAA,CAAAuC,kBAAkB,CAACvC,MAAA,CAAAwC,WAAW;;QAjFzD,WAAA5C,QAAA,CAiF4D;UAAA,OAAqC,CAjFjGmB,gBAAA,CAAA0B,gBAAA,CAiF+DzC,MAAA,CAAA0C,kBAAkB,CAAC1C,MAAA,CAAAwC,WAAW,kB;;QAjF7F9B,CAAA;mCAkF6BV,MAAA,CAAA2C,UAAU,I,cAA3BjB,YAAA,CAA+FN,oBAAA;QAlF3GhC,GAAA;QAkFyCiC,IAAI,EAAC,SAAS;QAAC,SAAM,MAAM;QAAEC,OAAK,EAAEtB,MAAA,CAAA4C;;QAlF7E,WAAAhD,QAAA,CAkF2F;UAAA,OAAIC,MAAA,SAAAA,MAAA,QAlF/FkB,gBAAA,CAkF2F,MAAI,E;;QAlF/FL,CAAA;YAAAlB,mBAAA,e;;IAAA,WAAAI,QAAA,CAuFM;MAAA,OAGM,CAHKI,MAAA,CAAAwC,WAAW,kB,cAAtBnD,mBAAA,CAGM,OAHNwD,UAGM,GAFJpD,YAAA,CAAiDqD,kBAAA;QAAxC,SAAM;MAAY;QAxFnC,WAAAlD,QAAA,CAwFoC;UAAA,OAAW,CAAXH,YAAA,CAAWsD,kBAAA,E;;QAxF/CrC,CAAA;sCAyFQnB,mBAAA,CAAgB,WAAb,WAAS,qB,KAGES,MAAA,CAAA2C,UAAU,I,cAA1BtD,mBAAA,CA6GM,OAzMZ2D,UAAA,GA6FQxD,mBAAA,UAAa,EACbD,mBAAA,CAgDM,OAhDN0D,UAgDM,GA/CJxD,YAAA,CAyBSyD,iBAAA;QAzBAC,MAAM,EAAE;MAAE;QA/F7B,WAAAvD,QAAA,CAgGY;UAAA,OAKS,CALTH,YAAA,CAKSkB,iBAAA;YALAC,IAAI,EAAE;UAAC;YAhG5B,WAAAhB,QAAA,CAiGc;cAAA,OAGU,CAHVH,YAAA,CAGUC,kBAAA;gBAHD0D,MAAM,EAAC;cAAO;gBACVzD,MAAM,EAAAC,QAAA,CAAC;kBAAA,OAAIC,MAAA,SAAAA,MAAA,QAlGtCkB,gBAAA,CAkGkC,MAAI,E;;gBAlGtC,WAAAnB,QAAA,CAmGgB;kBAAA,OAA0E,CAA1EL,mBAAA,CAA0E,OAA1E8D,UAA0E,EAAAZ,gBAAA,CAA1CzC,MAAA,CAAA2C,UAAU,CAACW,UAAU,CAACC,WAAW,iB;;gBAnGjF7C,CAAA;;;YAAAA,CAAA;cAsGYjB,YAAA,CAKSkB,iBAAA;YALAC,IAAI,EAAE;UAAC;YAtG5B,WAAAhB,QAAA,CAuGc;cAAA,OAGU,CAHVH,YAAA,CAGUC,kBAAA;gBAHD0D,MAAM,EAAC;cAAO;gBACVzD,MAAM,EAAAC,QAAA,CAAC;kBAAA,OAAKC,MAAA,SAAAA,MAAA,QAxGvCkB,gBAAA,CAwGkC,OAAK,E;;gBAxGvC,WAAAnB,QAAA,CAyGgB;kBAAA,OAAmF,CAAnFL,mBAAA,CAAmF,OAAnFiE,UAAmF,EAAAf,gBAAA,CAA3CzC,MAAA,CAAA2C,UAAU,CAACW,UAAU,CAACG,YAAY,iB;;gBAzG1F/C,CAAA;;;YAAAA,CAAA;cA4GYjB,YAAA,CAKSkB,iBAAA;YALAC,IAAI,EAAE;UAAC;YA5G5B,WAAAhB,QAAA,CA6Gc;cAAA,OAGU,CAHVH,YAAA,CAGUC,kBAAA;gBAHD0D,MAAM,EAAC;cAAO;gBACVzD,MAAM,EAAAC,QAAA,CAAC;kBAAA,OAAKC,MAAA,SAAAA,MAAA,QA9GvCkB,gBAAA,CA8GkC,OAAK,E;;gBA9GvC,WAAAnB,QAAA,CA+GgB;kBAAA,OAAkF,CAAlFL,mBAAA,CAAkF,OAAlFmE,UAAkF,EAAAjB,gBAAA,CAA3CzC,MAAA,CAAA2C,UAAU,CAACW,UAAU,CAACK,YAAY,iB;;gBA/GzFjD,CAAA;;;YAAAA,CAAA;cAkHYjB,YAAA,CAKSkB,iBAAA;YALAC,IAAI,EAAE;UAAC;YAlH5B,WAAAhB,QAAA,CAmHc;cAAA,OAGU,CAHVH,YAAA,CAGUC,kBAAA;gBAHD0D,MAAM,EAAC;cAAO;gBACVzD,MAAM,EAAAC,QAAA,CAAC;kBAAA,OAAKC,MAAA,SAAAA,MAAA,QApHvCkB,gBAAA,CAoHkC,OAAK,E;;gBApHvC,WAAAnB,QAAA,CAqHgB;kBAAA,OAAkF,CAAlFL,mBAAA,CAAkF,OAAlFqE,WAAkF,EAAAnB,gBAAA,CAA1CzC,MAAA,CAAA2C,UAAU,CAACW,UAAU,CAACO,WAAW,iB;;gBArHzFnD,CAAA;;;YAAAA,CAAA;;;QAAAA,CAAA;UA0HUjB,YAAA,CAmBSyD,iBAAA;QAnBAC,MAAM,EAAE,EAAE;QAAE,SAAM;;QA1HrC,WAAAvD,QAAA,CA2HY;UAAA,OAKS,CALTH,YAAA,CAKSkB,iBAAA;YALAC,IAAI,EAAE;UAAC;YA3H5B,WAAAhB,QAAA,CA4Hc;cAAA,OAGU,CAHVH,YAAA,CAGUC,kBAAA;gBAHD0D,MAAM,EAAC;cAAO;gBACVzD,MAAM,EAAAC,QAAA,CAAC;kBAAA,OAAMC,MAAA,SAAAA,MAAA,QA7HxCkB,gBAAA,CA6HkC,QAAM,E;;gBA7HxC,WAAAnB,QAAA,CA8HgB;kBAAA,OAA+F,CAA/FL,mBAAA,CAA+F,OAA/FuE,WAA+F,EAAArB,gBAAA,CAA/DzC,MAAA,CAAA2C,UAAU,CAACW,UAAU,CAACS,kBAAkB,CAACC,OAAO,OAAM,KAAG,gB;;gBA9HzGtD,CAAA;;;YAAAA,CAAA;cAiIYjB,YAAA,CAKSkB,iBAAA;YALAC,IAAI,EAAE;UAAC;YAjI5B,WAAAhB,QAAA,CAkIc;cAAA,OAGU,CAHVH,YAAA,CAGUC,kBAAA;gBAHD0D,MAAM,EAAC;cAAO;gBACVzD,MAAM,EAAAC,QAAA,CAAC;kBAAA,OAAMC,MAAA,SAAAA,MAAA,QAnIxCkB,gBAAA,CAmIkC,QAAM,E;;gBAnIxC,WAAAnB,QAAA,CAoIgB;kBAAA,OAAoF,CAApFL,mBAAA,CAAoF,OAApF0E,WAAoF,EAAAxB,gBAAA,CAApDzC,MAAA,CAAA2C,UAAU,CAACW,UAAU,CAACY,kBAAkB,IAAG,KAAG,gB;;gBApI9FxD,CAAA;;;YAAAA,CAAA;cAuIYjB,YAAA,CAKSkB,iBAAA;YALAC,IAAI,EAAE;UAAC;YAvI5B,WAAAhB,QAAA,CAwIc;cAAA,OAGU,CAHVH,YAAA,CAGUC,kBAAA;gBAHD0D,MAAM,EAAC;cAAO;gBACVzD,MAAM,EAAAC,QAAA,CAAC;kBAAA,OAAMC,MAAA,SAAAA,MAAA,QAzIxCkB,gBAAA,CAyIkC,QAAM,E;;gBAzIxC,WAAAnB,QAAA,CA0IgB;kBAAA,OAAoF,CAApFL,mBAAA,CAAoF,OAApF4E,WAAoF,EAAA1B,gBAAA,CAApDzC,MAAA,CAAA2C,UAAU,CAACW,UAAU,CAACc,kBAAkB,IAAG,KAAG,gB;;gBA1I9F1D,CAAA;;;YAAAA,CAAA;;;QAAAA,CAAA;YAgJQlB,mBAAA,UAAa,EACbD,mBAAA,CAqBM,OArBN8E,WAqBM,GApBJ5E,YAAA,CAmBSyD,iBAAA;QAnBAC,MAAM,EAAE;MAAE;QAlJ7B,WAAAvD,QAAA,CAmJY;UAAA,OAKS,CALeI,MAAA,CAAA2C,UAAU,CAAC2B,WAAW,CAACC,oBAAoB,I,cAAnE7C,YAAA,CAKSf,iBAAA;YAxJrBvB,GAAA;YAmJqBwB,IAAI,EAAE;;YAnJ3B,WAAAhB,QAAA,CAoJc;cAAA,OAGU,CAHVH,YAAA,CAGUC,kBAAA;gBAHD0D,MAAM,EAAC,OAAO;gBAAC,SAAM;;gBACjBzD,MAAM,EAAAC,QAAA,CAAC;kBAAA,OAAMC,MAAA,SAAAA,MAAA,QArJxCkB,gBAAA,CAqJkC,QAAM,E;;gBArJxC,WAAAnB,QAAA,CAsJgB;kBAAA,OAAqF,CAArFL,mBAAA,CAAqF;oBAA/EiF,GAAG,6BAA6BxE,MAAA,CAAA2C,UAAU,CAAC2B,WAAW,CAACC;0CAtJ7EE,WAAA,E;;gBAAA/D,CAAA;;;YAAAA,CAAA;gBAAAlB,mBAAA,gBAyJoCQ,MAAA,CAAA2C,UAAU,CAAC2B,WAAW,CAACI,uBAAuB,I,cAAtEhD,YAAA,CAKSf,iBAAA;YA9JrBvB,GAAA;YAyJqBwB,IAAI,EAAE;;YAzJ3B,WAAAhB,QAAA,CA0Jc;cAAA,OAGU,CAHVH,YAAA,CAGUC,kBAAA;gBAHD0D,MAAM,EAAC,OAAO;gBAAC,SAAM;;gBACjBzD,MAAM,EAAAC,QAAA,CAAC;kBAAA,OAAMC,MAAA,SAAAA,MAAA,QA3JxCkB,gBAAA,CA2JkC,QAAM,E;;gBA3JxC,WAAAnB,QAAA,CA4JgB;kBAAA,OAAwF,CAAxFL,mBAAA,CAAwF;oBAAlFiF,GAAG,6BAA6BxE,MAAA,CAAA2C,UAAU,CAAC2B,WAAW,CAACI;0CA5J7EC,WAAA,E;;gBAAAjE,CAAA;;;YAAAA,CAAA;gBAAAlB,mBAAA,gBA+JoCQ,MAAA,CAAA2C,UAAU,CAAC2B,WAAW,CAACM,2BAA2B,I,cAA1ElD,YAAA,CAKSf,iBAAA;YApKrBvB,GAAA;YA+JqBwB,IAAI,EAAE;;YA/J3B,WAAAhB,QAAA,CAgKc;cAAA,OAGU,CAHVH,YAAA,CAGUC,kBAAA;gBAHD0D,MAAM,EAAC,OAAO;gBAAC,SAAM;;gBACjBzD,MAAM,EAAAC,QAAA,CAAC;kBAAA,OAAMC,MAAA,SAAAA,MAAA,QAjKxCkB,gBAAA,CAiKkC,QAAM,E;;gBAjKxC,WAAAnB,QAAA,CAkKgB;kBAAA,OAA4F,CAA5FL,mBAAA,CAA4F;oBAAtFiF,GAAG,6BAA6BxE,MAAA,CAAA2C,UAAU,CAAC2B,WAAW,CAACM;0CAlK7EC,WAAA,E;;gBAAAnE,CAAA;;;YAAAA,CAAA;gBAAAlB,mBAAA,e;;QAAAkB,CAAA;YAwKQlB,mBAAA,YAAe,EACfD,mBAAA,CA+BM,OA/BNuF,WA+BM,GA9BJrF,YAAA,CA6BUC,kBAAA;QA7BD0D,MAAM,EAAC;MAAO;QACVzD,MAAM,EAAAC,QAAA,CAAC;UAAA,OAAMC,MAAA,SAAAA,MAAA,QA3KpCkB,gBAAA,CA2K8B,QAAM,E;;QA3KpC,WAAAnB,QAAA,CA4KY;UAAA,OA0BW,CA1BXH,YAAA,CA0BWoC,mBAAA;YA1BAC,IAAI,EAAE9B,MAAA,CAAA2C,UAAU,CAACoC,UAAU;YAAE/C,MAAM,EAAN,EAAM;YAACgD,MAAM,EAAN;;YA5K3D,WAAApF,QAAA,CA6Kc;cAAA,OAIkB,CAJlBH,YAAA,CAIkBwC,0BAAA;gBAJDC,IAAI,EAAC,QAAQ;gBAAC/B,KAAK,EAAC,IAAI;gBAACgC,KAAK,EAAC;;gBACnC,WAAOvC,QAAA,CAChB,UAAAqF,IAAA;kBAAA,IADoBC,GAAG,GAAAD,IAAA,CAAHC,GAAG;kBAAA,QACvBzF,YAAA,CAAkF6C,iBAAA;oBAAzEjB,IAAI,EAAErB,MAAA,CAAAmF,aAAa,CAACD,GAAG,CAACE,MAAM;;oBA/KzD,WAAAxF,QAAA,CA+K4D;sBAAA,OAA+B,CA/K3FmB,gBAAA,CAAA0B,gBAAA,CA+K+DzC,MAAA,CAAAqF,aAAa,CAACH,GAAG,CAACE,MAAM,kB;;oBA/KvF1E,CAAA;;;gBAAAA,CAAA;kBAkLcjB,YAAA,CAIkBwC,0BAAA;gBAJDC,IAAI,EAAC,YAAY;gBAAC/B,KAAK,EAAC,MAAM;gBAACgC,KAAK,EAAC;;gBACzC,WAAOvC,QAAA,CAChB,UAAA0F,KAAA;kBAAA,IADoBJ,GAAG,GAAAI,KAAA,CAAHJ,GAAG;kBAAA,QACvB3F,mBAAA,CAAwD,aAAAkD,gBAAA,CAAhD8C,IAAI,CAACC,SAAS,CAACN,GAAG,CAACO,UAAU,2B;;gBApLvD/E,CAAA;kBAuLcjB,YAAA,CAIkBwC,0BAAA;gBAJDC,IAAI,EAAC,eAAe;gBAAC/B,KAAK,EAAC,MAAM;gBAACgC,KAAK,EAAC;;gBAC5C,WAAOvC,QAAA,CAChB,UAAA8F,KAAA;kBAAA,IADoBR,GAAG,GAAAQ,KAAA,CAAHR,GAAG;kBAAA,QACZA,GAAG,CAACS,aAAa,I,cAA5BtG,mBAAA,CAAoF,OAzLtGuG,WAAA,EAAAnD,gBAAA,CAyLmD8C,IAAI,CAACC,SAAS,CAACN,GAAG,CAACS,aAAa,8BAzLnFnG,mBAAA,e;;gBAAAkB,CAAA;kBA4LcjB,YAAA,CAIkBwC,0BAAA;gBAJDC,IAAI,EAAC,gBAAgB;gBAAC/B,KAAK,EAAC,MAAM;gBAACgC,KAAK,EAAC;;gBAC7C,WAAOvC,QAAA,CAChB,UAAAiG,KAAA;kBAAA,IADoBX,GAAG,GAAAW,KAAA,CAAHX,GAAG;kBAAA,QA7LzCnE,gBAAA,CAAA0B,gBAAA,CA8LqByC,GAAG,CAACY,cAAc,IAAG,MAC1B,gB;;gBA/LhBpF,CAAA;kBAiMcjB,YAAA,CAIkBwC,0BAAA;gBAJDC,IAAI,EAAC,eAAe;gBAAC/B,KAAK,EAAC,MAAM;gBAAC,WAAS,EAAC;;gBAChD,WAAOP,QAAA,CAChB,UAAAmG,KAAA;kBAAA,IADoBb,GAAG,GAAAa,KAAA,CAAHb,GAAG;kBAAA,QACWA,GAAG,CAACc,aAAa,I,cAAnD3G,mBAAA,CAAmF,QAAnF4G,WAAmF,EAAAxD,gBAAA,CAA3ByC,GAAG,CAACc,aAAa,oBAnM3FxG,mBAAA,e;;gBAAAkB,CAAA;;;YAAAA,CAAA;;;QAAAA,CAAA;gBAAAlB,mBAAA,e;;IAAAkB,CAAA;QAAAlB,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}