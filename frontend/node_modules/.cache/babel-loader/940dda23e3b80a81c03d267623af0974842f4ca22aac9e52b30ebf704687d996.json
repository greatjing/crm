{"ast":null,"code":"import _regeneratorRuntime from \"/Users/guojingjing/2024-ai-code/crm/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/guojingjing/2024-ai-code/crm/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport { ref } from 'vue';\nimport MonacoEditor from '@/components/MonacoEditor.vue';\nimport { strategyApi } from '@/api/strategy';\nimport { ElMessage } from 'element-plus';\nexport default {\n  name: 'StrategyEdit',\n  components: {\n    MonacoEditor: MonacoEditor\n  },\n  data: function data() {\n    return {\n      form: {\n        name: '',\n        description: '',\n        sqlCode: '',\n        pythonCode: ''\n      },\n      rules: {\n        name: [{\n          required: true,\n          message: '请输入策略名称',\n          trigger: 'blur'\n        }, {\n          min: 2,\n          max: 50,\n          message: '长度在 2 到 50 个字符',\n          trigger: 'blur'\n        }],\n        description: [{\n          required: true,\n          message: '请输入策略描述',\n          trigger: 'blur'\n        }],\n        sqlCode: [{\n          required: true,\n          message: '请输入SQL代码',\n          trigger: 'blur'\n        }],\n        pythonCode: [{\n          required: true,\n          message: '请输入Python代码',\n          trigger: 'blur'\n        }]\n      },\n      editorOptions: {\n        theme: 'customTheme',\n        minimap: {\n          enabled: false\n        },\n        scrollBeyondLastLine: false,\n        fontSize: 14,\n        automaticLayout: true,\n        tabSize: 4,\n        formatOnPaste: true,\n        formatOnType: true\n      }\n    };\n  },\n  setup: function setup() {\n    var formRef = ref(null);\n    return {\n      formRef: formRef\n    };\n  },\n  computed: {\n    isEdit: function isEdit() {\n      return this.$route.params.id !== undefined;\n    }\n  },\n  methods: {\n    handleSave: function handleSave() {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (_this.formRef) {\n                _context.next = 2;\n                break;\n              }\n              return _context.abrupt(\"return\");\n            case 2:\n              _context.prev = 2;\n              _context.next = 5;\n              return _this.formRef.validate();\n            case 5:\n              if (!_this.isEdit) {\n                _context.next = 11;\n                break;\n              }\n              _context.next = 8;\n              return strategyApi.updateStrategy(_this.$route.params.id, _this.form);\n            case 8:\n              ElMessage.success('策略更新成功');\n              _context.next = 14;\n              break;\n            case 11:\n              _context.next = 13;\n              return strategyApi.createStrategy(_this.form);\n            case 13:\n              ElMessage.success('策略创建成功');\n            case 14:\n              _this.$router.push('/strategy');\n              _context.next = 20;\n              break;\n            case 17:\n              _context.prev = 17;\n              _context.t0 = _context[\"catch\"](2);\n              if (_context.t0.name === 'ValidationError') {\n                ElMessage.error('请检查表单填写是否正确');\n              } else {\n                ElMessage.error('保存失败：' + _context.t0.message);\n              }\n            case 20:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[2, 17]]);\n      }))();\n    },\n    cancel: function cancel() {\n      this.$router.push('/strategy');\n    },\n    loadStrategy: function loadStrategy() {\n      var _this2 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              if (_this2.isEdit) {\n                _context2.next = 2;\n                break;\n              }\n              return _context2.abrupt(\"return\");\n            case 2:\n              _context2.prev = 2;\n              _context2.next = 5;\n              return strategyApi.getStrategy(_this2.$route.params.id);\n            case 5:\n              response = _context2.sent;\n              _this2.form = response.data;\n              _context2.next = 13;\n              break;\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](2);\n              ElMessage.error('加载策略失败：' + _context2.t0.message);\n              _this2.$router.push('/strategy');\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[2, 9]]);\n      }))();\n    }\n  },\n  mounted: function mounted() {\n    this.loadStrategy();\n  }\n};","map":{"version":3,"names":["ref","MonacoEditor","strategyApi","ElMessage","name","components","data","form","description","sqlCode","pythonCode","rules","required","message","trigger","min","max","editorOptions","theme","minimap","enabled","scrollBeyondLastLine","fontSize","automaticLayout","tabSize","formatOnPaste","formatOnType","setup","formRef","computed","isEdit","$route","params","id","undefined","methods","handleSave","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","abrupt","validate","updateStrategy","success","createStrategy","$router","push","t0","error","stop","cancel","loadStrategy","_this2","_callee2","response","_callee2$","_context2","getStrategy","sent","mounted"],"sources":["/Users/guojingjing/2024-ai-code/crm/frontend/src/views/strategy/StrategyEdit.vue"],"sourcesContent":["<template>\n  <div class=\"strategy-edit\">\n    <div class=\"header\">\n      <h2>{{ isEdit ? '编辑策略' : '新建策略' }}</h2>\n    </div>\n    \n    <el-form :model=\"form\" label-width=\"120px\" :rules=\"rules\" ref=\"formRef\">\n      <el-form-item label=\"策略名称\" prop=\"name\">\n        <el-input v-model=\"form.name\" placeholder=\"请输入策略名称\" />\n      </el-form-item>\n      \n      <el-form-item label=\"策略描述\" prop=\"description\">\n        <el-input v-model=\"form.description\" type=\"textarea\" placeholder=\"请输入策略描述\" />\n      </el-form-item>\n      \n      <el-form-item label=\"SQL代码\" prop=\"sqlCode\">\n        <div class=\"editor-container\">\n          <MonacoEditor\n            v-model=\"form.sqlCode\"\n            language=\"sql\"\n            :options=\"editorOptions\"\n            @save=\"handleSave\"\n          />\n        </div>\n        <div class=\"editor-tips\">\n          <el-tag size=\"small\">按 Ctrl+S (Mac: Cmd+S) 保存</el-tag>\n          <el-tag size=\"small\" type=\"info\">支持 SQL 代码提示</el-tag>\n        </div>\n      </el-form-item>\n      \n      <el-form-item label=\"Python代码\" prop=\"pythonCode\">\n        <div class=\"editor-container\">\n          <MonacoEditor\n            v-model=\"form.pythonCode\"\n            language=\"python\"\n            :options=\"editorOptions\"\n            @save=\"handleSave\"\n          />\n        </div>\n        <div class=\"editor-tips\">\n          <el-tag size=\"small\">按 Ctrl+S (Mac: Cmd+S) 保存</el-tag>\n          <el-tag size=\"small\" type=\"info\">支持 Python 代码提示</el-tag>\n        </div>\n      </el-form-item>\n      \n      <el-form-item>\n        <el-button type=\"primary\" @click=\"handleSave\">保存</el-button>\n        <el-button @click=\"cancel\">取消</el-button>\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n\n<script>\nimport { ref } from 'vue'\nimport MonacoEditor from '@/components/MonacoEditor.vue'\nimport { strategyApi } from '@/api/strategy'\nimport { ElMessage } from 'element-plus'\n\nexport default {\n  name: 'StrategyEdit',\n  components: {\n    MonacoEditor\n  },\n  data() {\n    return {\n      form: {\n        name: '',\n        description: '',\n        sqlCode: '',\n        pythonCode: ''\n      },\n      rules: {\n        name: [\n          { required: true, message: '请输入策略名称', trigger: 'blur' },\n          { min: 2, max: 50, message: '长度在 2 到 50 个字符', trigger: 'blur' }\n        ],\n        description: [\n          { required: true, message: '请输入策略描述', trigger: 'blur' }\n        ],\n        sqlCode: [\n          { required: true, message: '请输入SQL代码', trigger: 'blur' }\n        ],\n        pythonCode: [\n          { required: true, message: '请输入Python代码', trigger: 'blur' }\n        ]\n      },\n      editorOptions: {\n        theme: 'customTheme',\n        minimap: { enabled: false },\n        scrollBeyondLastLine: false,\n        fontSize: 14,\n        automaticLayout: true,\n        tabSize: 4,\n        formatOnPaste: true,\n        formatOnType: true\n      }\n    }\n  },\n  setup() {\n    const formRef = ref(null)\n    return { formRef }\n  },\n  computed: {\n    isEdit() {\n      return this.$route.params.id !== undefined\n    }\n  },\n  methods: {\n    async handleSave() {\n      if (!this.formRef) return\n      \n      try {\n        await this.formRef.validate()\n        \n        if (this.isEdit) {\n          await strategyApi.updateStrategy(this.$route.params.id, this.form)\n          ElMessage.success('策略更新成功')\n        } else {\n          await strategyApi.createStrategy(this.form)\n          ElMessage.success('策略创建成功')\n        }\n        \n        this.$router.push('/strategy')\n      } catch (error) {\n        if (error.name === 'ValidationError') {\n          ElMessage.error('请检查表单填写是否正确')\n        } else {\n          ElMessage.error('保存失败：' + error.message)\n        }\n      }\n    },\n    cancel() {\n      this.$router.push('/strategy')\n    },\n    async loadStrategy() {\n      if (!this.isEdit) return\n      \n      try {\n        const response = await strategyApi.getStrategy(this.$route.params.id)\n        this.form = response.data\n      } catch (error) {\n        ElMessage.error('加载策略失败：' + error.message)\n        this.$router.push('/strategy')\n      }\n    }\n  },\n  mounted() {\n    this.loadStrategy()\n  }\n}\n</script>\n\n<style scoped>\n.strategy-edit {\n  padding: 20px;\n}\n.header {\n  margin-bottom: 20px;\n}\n.editor-container {\n  height: 300px;\n  border: 1px solid #dcdfe6;\n  border-radius: 4px;\n}\n.editor-tips {\n  margin-top: 8px;\n  display: flex;\n  gap: 8px;\n}\n.el-tag {\n  font-size: 12px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}