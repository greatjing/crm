{"ast":null,"code":"import _objectSpread from \"/Users/guojingjing/2024-ai-code/crm/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport * as monaco from 'monaco-editor';\nimport { onMounted, onBeforeUnmount, watch, ref } from 'vue';\nexport default {\n  name: 'MonacoEditor',\n  props: {\n    modelValue: {\n      type: String,\n      \"default\": ''\n    },\n    language: {\n      type: String,\n      \"default\": 'javascript'\n    },\n    options: {\n      type: Object,\n      \"default\": function _default() {\n        return {};\n      }\n    }\n  },\n  emits: ['update:modelValue'],\n  setup: function setup(props, _ref) {\n    var emit = _ref.emit;\n    var editor = null;\n    var editorContainer = ref(null);\n    var initMonaco = function initMonaco() {\n      editor = monaco.editor.create(editorContainer.value, _objectSpread({\n        value: props.modelValue,\n        language: props.language\n      }, props.options));\n      editor.onDidChangeModelContent(function () {\n        var value = editor.getValue();\n        emit('update:modelValue', value);\n      });\n    };\n    onMounted(function () {\n      initMonaco();\n    });\n    onBeforeUnmount(function () {\n      if (editor) {\n        editor.dispose();\n      }\n    });\n    watch(function () {\n      return props.modelValue;\n    }, function (newValue) {\n      if (editor && newValue !== editor.getValue()) {\n        editor.setValue(newValue);\n      }\n    });\n    watch(function () {\n      return props.language;\n    }, function (newValue) {\n      if (editor) {\n        monaco.editor.setModelLanguage(editor.getModel(), newValue);\n      }\n    });\n    return {\n      editorContainer: editorContainer\n    };\n  }\n};","map":{"version":3,"names":["monaco","onMounted","onBeforeUnmount","watch","ref","name","props","modelValue","type","String","language","options","Object","default","emits","setup","_ref","emit","editor","editorContainer","initMonaco","create","value","_objectSpread","onDidChangeModelContent","getValue","dispose","newValue","setValue","setModelLanguage","getModel"],"sources":["/Users/guojingjing/2024-ai-code/crm/frontend/src/components/MonacoEditor.vue"],"sourcesContent":["<template>\n  <div ref=\"editorContainer\" class=\"monaco-editor-container\"></div>\n</template>\n\n<script>\nimport * as monaco from 'monaco-editor'\nimport { onMounted, onBeforeUnmount, watch, ref } from 'vue'\n\nexport default {\n  name: 'MonacoEditor',\n  props: {\n    modelValue: {\n      type: String,\n      default: ''\n    },\n    language: {\n      type: String,\n      default: 'javascript'\n    },\n    options: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  emits: ['update:modelValue'],\n  setup(props, { emit }) {\n    let editor = null\n    const editorContainer = ref(null)\n\n    const initMonaco = () => {\n      editor = monaco.editor.create(editorContainer.value, {\n        value: props.modelValue,\n        language: props.language,\n        ...props.options\n      })\n\n      editor.onDidChangeModelContent(() => {\n        const value = editor.getValue()\n        emit('update:modelValue', value)\n      })\n    }\n\n    onMounted(() => {\n      initMonaco()\n    })\n\n    onBeforeUnmount(() => {\n      if (editor) {\n        editor.dispose()\n      }\n    })\n\n    watch(() => props.modelValue, (newValue) => {\n      if (editor && newValue !== editor.getValue()) {\n        editor.setValue(newValue)\n      }\n    })\n\n    watch(() => props.language, (newValue) => {\n      if (editor) {\n        monaco.editor.setModelLanguage(editor.getModel(), newValue)\n      }\n    })\n\n    return {\n      editorContainer\n    }\n  }\n}\n</script>\n\n<style scoped>\n.monaco-editor-container {\n  width: 100%;\n  height: 100%;\n}\n</style> "],"mappings":";AAKA,OAAO,KAAKA,MAAK,MAAO,eAAc;AACtC,SAASC,SAAS,EAAEC,eAAe,EAAEC,KAAK,EAAEC,GAAE,QAAS,KAAI;AAE3D,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,KAAK,EAAE;IACLC,UAAU,EAAE;MACVC,IAAI,EAAEC,MAAM;MACZ,WAAS;IACX,CAAC;IACDC,QAAQ,EAAE;MACRF,IAAI,EAAEC,MAAM;MACZ,WAAS;IACX,CAAC;IACDE,OAAO,EAAE;MACPH,IAAI,EAAEI,MAAM;MACZ,WAAS,SAATC,QAAOA,CAAA;QAAA,OAAS,CAAC,CAAC;MAAA;IACpB;EACF,CAAC;EACDC,KAAK,EAAE,CAAC,mBAAmB,CAAC;EAC5BC,KAAK,WAALA,KAAKA,CAACT,KAAK,EAAAU,IAAA,EAAY;IAAA,IAARC,IAAG,GAAAD,IAAA,CAAHC,IAAG;IAChB,IAAIC,MAAK,GAAI,IAAG;IAChB,IAAMC,eAAc,GAAIf,GAAG,CAAC,IAAI;IAEhC,IAAMgB,UAAS,GAAI,SAAbA,UAASA,CAAA,EAAU;MACvBF,MAAK,GAAIlB,MAAM,CAACkB,MAAM,CAACG,MAAM,CAACF,eAAe,CAACG,KAAK,EAAAC,aAAA;QACjDD,KAAK,EAAEhB,KAAK,CAACC,UAAU;QACvBG,QAAQ,EAAEJ,KAAK,CAACI;MAAQ,GACrBJ,KAAK,CAACK,OAAM,CAChB;MAEDO,MAAM,CAACM,uBAAuB,CAAC,YAAM;QACnC,IAAMF,KAAI,GAAIJ,MAAM,CAACO,QAAQ,CAAC;QAC9BR,IAAI,CAAC,mBAAmB,EAAEK,KAAK;MACjC,CAAC;IACH;IAEArB,SAAS,CAAC,YAAM;MACdmB,UAAU,CAAC;IACb,CAAC;IAEDlB,eAAe,CAAC,YAAM;MACpB,IAAIgB,MAAM,EAAE;QACVA,MAAM,CAACQ,OAAO,CAAC;MACjB;IACF,CAAC;IAEDvB,KAAK,CAAC;MAAA,OAAMG,KAAK,CAACC,UAAU;IAAA,GAAE,UAACoB,QAAQ,EAAK;MAC1C,IAAIT,MAAK,IAAKS,QAAO,KAAMT,MAAM,CAACO,QAAQ,CAAC,CAAC,EAAE;QAC5CP,MAAM,CAACU,QAAQ,CAACD,QAAQ;MAC1B;IACF,CAAC;IAEDxB,KAAK,CAAC;MAAA,OAAMG,KAAK,CAACI,QAAQ;IAAA,GAAE,UAACiB,QAAQ,EAAK;MACxC,IAAIT,MAAM,EAAE;QACVlB,MAAM,CAACkB,MAAM,CAACW,gBAAgB,CAACX,MAAM,CAACY,QAAQ,CAAC,CAAC,EAAEH,QAAQ;MAC5D;IACF,CAAC;IAED,OAAO;MACLR,eAAc,EAAdA;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}