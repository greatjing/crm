{"ast":null,"code":"import _objectSpread from \"/Users/guojingjing/2024-ai-code/crm/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _regeneratorRuntime from \"/Users/guojingjing/2024-ai-code/crm/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/guojingjing/2024-ai-code/crm/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { ElMessage } from 'element-plus';\nimport { strategyApi } from '@/api/strategy';\nexport default {\n  name: 'StrategyList',\n  setup: function setup() {\n    var router = useRouter();\n    var strategies = ref([\n    // 测试数据\n    {\n      id: 1,\n      name: '测试策略1',\n      description: '这是一个测试策略',\n      status: 'active'\n    }, {\n      id: 2,\n      name: '测试策略2',\n      description: '这是另一个测试策略',\n      status: 'inactive'\n    }]);\n    var loadStrategies = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return strategyApi.getStrategies();\n            case 3:\n              response = _context.sent;\n              strategies.value = response.data;\n              _context.next = 10;\n              break;\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              ElMessage.error('加载策略列表失败：' + _context.t0.message);\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 7]]);\n      }));\n      return function loadStrategies() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    var createStrategy = function createStrategy() {\n      router.push('/strategy/create');\n    };\n    var editStrategy = function editStrategy(strategy) {\n      router.push(\"/strategy/edit/\".concat(strategy.id));\n    };\n    var testStrategy = function testStrategy(strategy) {\n      router.push(\"/strategy/test/\".concat(strategy.id));\n    };\n    var toggleStatus = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(strategy) {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return strategyApi.updateStrategy(strategy.id, _objectSpread(_objectSpread({}, strategy), {}, {\n                status: strategy.status === 'active' ? 'inactive' : 'active'\n              }));\n            case 3:\n              strategy.status = strategy.status === 'active' ? 'inactive' : 'active';\n              ElMessage.success('状态更新成功');\n              _context2.next = 10;\n              break;\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](0);\n              ElMessage.error('状态更新失败：' + _context2.t0.message);\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[0, 7]]);\n      }));\n      return function toggleStatus(_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    onMounted(function () {\n      // 暂时注释掉API调用，等后端ready后再启用\n      // loadStrategies()\n    });\n    return {\n      strategies: strategies,\n      createStrategy: createStrategy,\n      editStrategy: editStrategy,\n      testStrategy: testStrategy,\n      toggleStatus: toggleStatus\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","useRouter","ElMessage","strategyApi","name","setup","router","strategies","id","description","status","loadStrategies","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_callee$","_context","prev","next","getStrategies","sent","value","data","t0","error","message","stop","apply","arguments","createStrategy","push","editStrategy","strategy","concat","testStrategy","toggleStatus","_ref2","_callee2","_callee2$","_context2","updateStrategy","_objectSpread","success","_x"],"sources":["/Users/guojingjing/2024-ai-code/crm/frontend/src/views/strategy/StrategyList.vue"],"sourcesContent":["<template>\n  <div class=\"strategy-list\">\n    <div class=\"header\">\n      <h2>策略列表</h2>\n      <el-button type=\"primary\" @click=\"createStrategy\">新建策略</el-button>\n    </div>\n    \n    <el-table :data=\"strategies\" style=\"width: 100%\">\n      <el-table-column prop=\"id\" label=\"ID\" width=\"100\" />\n      <el-table-column prop=\"name\" label=\"策略名称\" width=\"180\" />\n      <el-table-column prop=\"description\" label=\"描述\" />\n      <el-table-column prop=\"status\" label=\"状态\" width=\"100\">\n        <template #default=\"scope\">\n          <el-tag :type=\"scope.row.status === 'active' ? 'success' : 'info'\">\n            {{ scope.row.status === 'active' ? '已启用' : '未启用' }}\n          </el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"操作\" width=\"250\">\n        <template #default=\"scope\">\n          <el-button size=\"small\" @click=\"editStrategy(scope.row)\">编辑</el-button>\n          <el-button size=\"small\" type=\"primary\" @click=\"testStrategy(scope.row)\">测试</el-button>\n          <el-button \n            size=\"small\" \n            :type=\"scope.row.status === 'active' ? 'warning' : 'success'\"\n            @click=\"toggleStatus(scope.row)\">\n            {{ scope.row.status === 'active' ? '停用' : '启用' }}\n          </el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { ElMessage } from 'element-plus'\nimport { strategyApi } from '@/api/strategy'\n\nexport default {\n  name: 'StrategyList',\n  setup() {\n    const router = useRouter()\n    const strategies = ref([\n      // 测试数据\n      {\n        id: 1,\n        name: '测试策略1',\n        description: '这是一个测试策略',\n        status: 'active'\n      },\n      {\n        id: 2,\n        name: '测试策略2',\n        description: '这是另一个测试策略',\n        status: 'inactive'\n      }\n    ])\n\n    const loadStrategies = async () => {\n      try {\n        const response = await strategyApi.getStrategies()\n        strategies.value = response.data\n      } catch (error) {\n        ElMessage.error('加载策略列表失败：' + error.message)\n      }\n    }\n\n    const createStrategy = () => {\n      router.push('/strategy/create')\n    }\n\n    const editStrategy = (strategy) => {\n      router.push(`/strategy/edit/${strategy.id}`)\n    }\n\n    const testStrategy = (strategy) => {\n      router.push(`/strategy/test/${strategy.id}`)\n    }\n\n    const toggleStatus = async (strategy) => {\n      try {\n        await strategyApi.updateStrategy(strategy.id, {\n          ...strategy,\n          status: strategy.status === 'active' ? 'inactive' : 'active'\n        })\n        strategy.status = strategy.status === 'active' ? 'inactive' : 'active'\n        ElMessage.success('状态更新成功')\n      } catch (error) {\n        ElMessage.error('状态更新失败：' + error.message)\n      }\n    }\n\n    onMounted(() => {\n      // 暂时注释掉API调用，等后端ready后再启用\n      // loadStrategies()\n    })\n\n    return {\n      strategies,\n      createStrategy,\n      editStrategy,\n      testStrategy,\n      toggleStatus\n    }\n  }\n}\n</script>\n\n<style scoped>\n.strategy-list {\n  padding: 20px;\n}\n.header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n.el-button {\n  margin-left: 8px;\n}\n.el-button:first-child {\n  margin-left: 0;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}