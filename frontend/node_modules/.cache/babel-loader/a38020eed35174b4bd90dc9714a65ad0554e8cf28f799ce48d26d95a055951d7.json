{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"strategy-list\"\n};\nvar _hoisted_2 = {\n  \"class\": \"header\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_button = _resolveComponent(\"el-button\");\n  var _component_el_table_column = _resolveComponent(\"el-table-column\");\n  var _component_el_tag = _resolveComponent(\"el-tag\");\n  var _component_el_table = _resolveComponent(\"el-table\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[1] || (_cache[1] = _createElementVNode(\"h2\", null, \"策略列表\", -1 /* HOISTED */)), _createVNode(_component_el_button, {\n    type: \"primary\",\n    onClick: $setup.createStrategy\n  }, {\n    \"default\": _withCtx(function () {\n      return _cache[0] || (_cache[0] = [_createTextVNode(\"新建策略\")]);\n    }),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"])]), _createVNode(_component_el_table, {\n    data: $setup.strategies,\n    style: {\n      \"width\": \"100%\"\n    }\n  }, {\n    \"default\": _withCtx(function () {\n      return [_createVNode(_component_el_table_column, {\n        prop: \"id\",\n        label: \"ID\",\n        width: \"100\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"name\",\n        label: \"策略名称\",\n        width: \"180\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"description\",\n        label: \"描述\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"status\",\n        label: \"状态\",\n        width: \"100\"\n      }, {\n        \"default\": _withCtx(function (scope) {\n          return [_createVNode(_component_el_tag, {\n            type: scope.row.status === 'active' ? 'success' : 'info'\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createTextVNode(_toDisplayString(scope.row.status === 'active' ? '已启用' : '未启用'), 1 /* TEXT */)];\n            }),\n            _: 2 /* DYNAMIC */\n          }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"type\"])];\n        }),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_table_column, {\n        label: \"操作\",\n        width: \"250\"\n      }, {\n        \"default\": _withCtx(function (scope) {\n          return [_createVNode(_component_el_button, {\n            size: \"small\",\n            onClick: function onClick($event) {\n              return $setup.editStrategy(scope.row);\n            }\n          }, {\n            \"default\": _withCtx(function () {\n              return _cache[2] || (_cache[2] = [_createTextVNode(\"编辑\")]);\n            }),\n            _: 2 /* DYNAMIC */\n          }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), _createVNode(_component_el_button, {\n            size: \"small\",\n            type: \"primary\",\n            onClick: function onClick($event) {\n              return $setup.testStrategy(scope.row);\n            }\n          }, {\n            \"default\": _withCtx(function () {\n              return _cache[3] || (_cache[3] = [_createTextVNode(\"测试\")]);\n            }),\n            _: 2 /* DYNAMIC */\n          }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), _createVNode(_component_el_button, {\n            size: \"small\",\n            type: scope.row.status === 'active' ? 'warning' : 'success',\n            onClick: function onClick($event) {\n              return $setup.toggleStatus(scope.row);\n            }\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createTextVNode(_toDisplayString(scope.row.status === 'active' ? '停用' : '启用'), 1 /* TEXT */)];\n            }),\n            _: 2 /* DYNAMIC */\n          }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"type\", \"onClick\"])];\n        }),\n        _: 1 /* STABLE */\n      })];\n    }),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"data\"])]);\n}","map":{"version":3,"names":["_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createVNode","_component_el_button","type","onClick","$setup","createStrategy","_withCtx","_cache","_createTextVNode","_","_component_el_table","data","strategies","style","_component_el_table_column","prop","label","width","scope","_component_el_tag","row","status","_toDisplayString","size","$event","editStrategy","testStrategy","toggleStatus"],"sources":["/Users/guojingjing/2024-ai-code/crm/frontend/src/views/strategy/StrategyList.vue"],"sourcesContent":["<template>\n  <div class=\"strategy-list\">\n    <div class=\"header\">\n      <h2>策略列表</h2>\n      <el-button type=\"primary\" @click=\"createStrategy\">新建策略</el-button>\n    </div>\n    \n    <el-table :data=\"strategies\" style=\"width: 100%\">\n      <el-table-column prop=\"id\" label=\"ID\" width=\"100\" />\n      <el-table-column prop=\"name\" label=\"策略名称\" width=\"180\" />\n      <el-table-column prop=\"description\" label=\"描述\" />\n      <el-table-column prop=\"status\" label=\"状态\" width=\"100\">\n        <template #default=\"scope\">\n          <el-tag :type=\"scope.row.status === 'active' ? 'success' : 'info'\">\n            {{ scope.row.status === 'active' ? '已启用' : '未启用' }}\n          </el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"操作\" width=\"250\">\n        <template #default=\"scope\">\n          <el-button size=\"small\" @click=\"editStrategy(scope.row)\">编辑</el-button>\n          <el-button size=\"small\" type=\"primary\" @click=\"testStrategy(scope.row)\">测试</el-button>\n          <el-button \n            size=\"small\" \n            :type=\"scope.row.status === 'active' ? 'warning' : 'success'\"\n            @click=\"toggleStatus(scope.row)\">\n            {{ scope.row.status === 'active' ? '停用' : '启用' }}\n          </el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { ElMessage } from 'element-plus'\nimport { strategyApi } from '@/api/strategy'\n\nexport default {\n  name: 'StrategyList',\n  setup() {\n    const router = useRouter()\n    const strategies = ref([\n      // 测试数据\n      {\n        id: 1,\n        name: '测试策略1',\n        description: '这是一个测试策略',\n        status: 'active'\n      },\n      {\n        id: 2,\n        name: '测试策略2',\n        description: '这是另一个测试策略',\n        status: 'inactive'\n      }\n    ])\n\n    const loadStrategies = async () => {\n      try {\n        const response = await strategyApi.getStrategies()\n        strategies.value = response.data\n      } catch (error) {\n        ElMessage.error('加载策略列表失败：' + error.message)\n      }\n    }\n\n    const createStrategy = () => {\n      router.push('/strategy/create')\n    }\n\n    const editStrategy = (strategy) => {\n      router.push(`/strategy/edit/${strategy.id}`)\n    }\n\n    const testStrategy = (strategy) => {\n      router.push(`/strategy/test/${strategy.id}`)\n    }\n\n    const toggleStatus = async (strategy) => {\n      try {\n        await strategyApi.updateStrategy(strategy.id, {\n          ...strategy,\n          status: strategy.status === 'active' ? 'inactive' : 'active'\n        })\n        strategy.status = strategy.status === 'active' ? 'inactive' : 'active'\n        ElMessage.success('状态更新成功')\n      } catch (error) {\n        ElMessage.error('状态更新失败：' + error.message)\n      }\n    }\n\n    onMounted(() => {\n      // 暂时注释掉API调用，等后端ready后再启用\n      // loadStrategies()\n    })\n\n    return {\n      strategies,\n      createStrategy,\n      editStrategy,\n      testStrategy,\n      toggleStatus\n    }\n  }\n}\n</script>\n\n<style scoped>\n.strategy-list {\n  padding: 20px;\n}\n.header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n.el-button {\n  margin-left: 8px;\n}\n.el-button:first-child {\n  margin-left: 0;\n}\n</style> "],"mappings":";;EACO,SAAM;AAAe;;EACnB,SAAM;AAAQ;;;;;;uBADrBA,mBAAA,CA8BM,OA9BNC,UA8BM,GA7BJC,mBAAA,CAGM,OAHNC,UAGM,G,0BAFJD,mBAAA,CAAa,YAAT,MAAI,sBACRE,YAAA,CAAkEC,oBAAA;IAAvDC,IAAI,EAAC,SAAS;IAAEC,OAAK,EAAEC,MAAA,CAAAC;;IAJxC,WAAAC,QAAA,CAIwD;MAAA,OAAIC,MAAA,QAAAA,MAAA,OAJ5DC,gBAAA,CAIwD,MAAI,E;;IAJ5DC,CAAA;oCAOIT,YAAA,CAuBWU,mBAAA;IAvBAC,IAAI,EAAEP,MAAA,CAAAQ,UAAU;IAAEC,KAAmB,EAAnB;MAAA;IAAA;;IAPjC,WAAAP,QAAA,CAQM;MAAA,OAAoD,CAApDN,YAAA,CAAoDc,0BAAA;QAAnCC,IAAI,EAAC,IAAI;QAACC,KAAK,EAAC,IAAI;QAACC,KAAK,EAAC;UAC5CjB,YAAA,CAAwDc,0BAAA;QAAvCC,IAAI,EAAC,MAAM;QAACC,KAAK,EAAC,MAAM;QAACC,KAAK,EAAC;UAChDjB,YAAA,CAAiDc,0BAAA;QAAhCC,IAAI,EAAC,aAAa;QAACC,KAAK,EAAC;UAC1ChB,YAAA,CAMkBc,0BAAA;QANDC,IAAI,EAAC,QAAQ;QAACC,KAAK,EAAC,IAAI;QAACC,KAAK,EAAC;;QACnC,WAAOX,QAAA,CAChB,UAESY,KAHc;UAAA,QACvBlB,YAAA,CAESmB,iBAAA;YAFAjB,IAAI,EAAEgB,KAAK,CAACE,GAAG,CAACC,MAAM;;YAbzC,WAAAf,QAAA,CAcY;cAAA,OAAmD,CAd/DE,gBAAA,CAAAc,gBAAA,CAceJ,KAAK,CAACE,GAAG,CAACC,MAAM,8C;;YAd/BZ,CAAA;;;QAAAA,CAAA;UAkBMT,YAAA,CAWkBc,0BAAA;QAXDE,KAAK,EAAC,IAAI;QAACC,KAAK,EAAC;;QACrB,WAAOX,QAAA,CAChB,UAAuEY,KADhD;UAAA,QACvBlB,YAAA,CAAuEC,oBAAA;YAA5DsB,IAAI,EAAC,OAAO;YAAEpB,OAAK,WAALA,OAAKA,CAAAqB,MAAA;cAAA,OAAEpB,MAAA,CAAAqB,YAAY,CAACP,KAAK,CAACE,GAAG;YAAA;;YApBhE,WAAAd,QAAA,CAoBmE;cAAA,OAAEC,MAAA,QAAAA,MAAA,OApBrEC,gBAAA,CAoBmE,IAAE,E;;YApBrEC,CAAA;4DAqBUT,YAAA,CAAsFC,oBAAA;YAA3EsB,IAAI,EAAC,OAAO;YAACrB,IAAI,EAAC,SAAS;YAAEC,OAAK,WAALA,OAAKA,CAAAqB,MAAA;cAAA,OAAEpB,MAAA,CAAAsB,YAAY,CAACR,KAAK,CAACE,GAAG;YAAA;;YArB/E,WAAAd,QAAA,CAqBkF;cAAA,OAAEC,MAAA,QAAAA,MAAA,OArBpFC,gBAAA,CAqBkF,IAAE,E;;YArBpFC,CAAA;4DAsBUT,YAAA,CAKYC,oBAAA;YAJVsB,IAAI,EAAC,OAAO;YACXrB,IAAI,EAAEgB,KAAK,CAACE,GAAG,CAACC,MAAM;YACtBlB,OAAK,WAALA,OAAKA,CAAAqB,MAAA;cAAA,OAAEpB,MAAA,CAAAuB,YAAY,CAACT,KAAK,CAACE,GAAG;YAAA;;YAzB1C,WAAAd,QAAA,CA0BY;cAAA,OAAiD,CA1B7DE,gBAAA,CAAAc,gBAAA,CA0BeJ,KAAK,CAACE,GAAG,CAACC,MAAM,4C;;YA1B/BZ,CAAA;;;QAAAA,CAAA;;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}