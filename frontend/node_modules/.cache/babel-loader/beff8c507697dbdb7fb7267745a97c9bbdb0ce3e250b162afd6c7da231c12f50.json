{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nvar _hoisted_1 = {\n  ref: \"editorContainer\",\n  \"class\": \"monaco-editor-container\"\n};\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, null, 512 /* NEED_PATCH */);\n}","map":{"version":3,"names":["ref","_createElementBlock","_hoisted_1"],"sources":["/Users/guojingjing/2024-ai-code/crm/frontend/src/components/MonacoEditor.vue"],"sourcesContent":["<template>\n  <div ref=\"editorContainer\" class=\"monaco-editor-container\"></div>\n</template>\n\n<script>\nimport * as monaco from 'monaco-editor'\nimport { onMounted, onBeforeUnmount, watch, ref } from 'vue'\nimport * as monaco from 'monaco-editor';\n\n\nexport default {\n  name: 'MonacoEditor',\n  props: {\n    modelValue: {\n      type: String,\n      default: ''\n    },\n    language: {\n      type: String,\n      default: 'javascript'\n    },\n    options: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  emits: ['update:modelValue'],\n  setup(props, { emit }) {\n    let editor = null\n    const editorContainer = ref(null)\n\n    const initMonaco = () => {\n      editor = monaco.editor.create(editorContainer.value, {\n        value: props.modelValue,\n        language: props.language,\n        ...props.options\n      })\n\n      editor.onDidChangeModelContent(() => {\n        const value = editor.getValue()\n        emit('update:modelValue', value)\n      })\n    }\n\n    onMounted(() => {\n      initMonaco()\n    })\n\n    onBeforeUnmount(() => {\n      if (editor) {\n        editor.dispose()\n      }\n    })\n\n    watch(() => props.modelValue, (newValue) => {\n      if (editor && newValue !== editor.getValue()) {\n        editor.setValue(newValue)\n      }\n    })\n\n    watch(() => props.language, (newValue) => {\n      if (editor) {\n        monaco.editor.setModelLanguage(editor.getModel(), newValue)\n      }\n    })\n\n    return {\n      editorContainer\n    }\n  }\n}\n</script>\n\n<style scoped>\n.monaco-editor-container {\n  width: 100%;\n  height: 100%;\n}\n</style> "],"mappings":";;EACOA,GAAG,EAAC,iBAAiB;EAAC,SAAM;;;uBAAjCC,mBAAA,CAAiE,OAAjEC,UAAiE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}